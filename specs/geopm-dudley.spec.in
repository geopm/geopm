%define pname geopm
%define PNAME GEOPM

%define python_family python3
%define pip_family pip3
%define install_prefix /opt/ohpc/pub/libs/%{pname}/%{pname}-%{version}
%define module_prefix /opt/ohpc/pub/modulefiles/%{pname}
%define module_name %{version}
%define python_family_lib_dir /lib/python%{expand:%{%{python_family}_version}}/site-packages
%global __requires_exclude_from ^%{install_prefix}%{python_family_lib_dir}/.*$

Name:          %{pname}
Summary:       Global Extensible Open Power Manager
Version:       @VERSION@
Release:       1
License:       BSD-3-Clause
Group:         System Environment/Libraries
URL:           https://geopm.github.io
Source0:       https://github.com/geopm/geopm/releases/download/v%{version}/geopm-%{version}.tar.gz
Patch1:        geopm-pyyaml-req.patch
BuildRequires: autoconf
BuildRequires: automake
BuildRequires: libtool
BuildRequires: libtool-ltdl-devel
BuildRequires: %{python_family}
BuildRequires: %{python_family}-devel
BuildRequires: unzip
BuildRequires: zlib-devel
BuildRequires: openssh
BuildRequires: libelf-devel


%description
@BLURB@

%prep

%setup -q -n %{pname}-%{version}
%patch1 -p1

%build
test -f configure || ./autogen.sh
CC=icc CXX=icpc FC=ifort F77=ifort \
./configure --prefix=%{install_prefix} \
            --with-python=%{python_family} \
            || ( cat config.log && false )

%{__make} %{?_smp_mflags}

%install
%{pip_family} install --ignore-installed \
                      --target=%{buildroot}/%{install_prefix}%{python_family_lib_dir} \
                      -r ./scripts/requirements.txt
%{__make} DESTDIR=%{buildroot} install
rm -f $(find %{buildroot}/%{install_prefix} -name '*.a'; \
        find %{buildroot}/%{install_prefix} -name '*.la')

# Module file
%{__mkdir_p} %{buildroot}%{module_prefix}
%{__cat} << EOF > %{buildroot}/%{module_prefix}/%{module_name}
#%Module1.0#####################################################################

proc ModulesHelp { } {

puts stderr " "
puts stderr "This module loads the %{pname} package built with the intel compiler"
puts stderr "toolchain and the mpich MPI stack."
puts stderr "\nVersion %{version}\n"

}
module-whatis "Name: %{pname}"
module-whatis "Version: %{version}"
module-whatis "Category: perftools"
module-whatis "Description: %{summary}"
module-whatis "URL: %{url}"

set     version             %{version}

prepend-path    PATH                    %{install_prefix}/bin
prepend-path    PYTHONPATH              %{install_prefix}%{python_family_lib_dir}
prepend-path    INCLUDE                 %{install_prefix}/include
prepend-path    LD_LIBRARY_PATH         %{install_prefix}/lib
prepend-path    MANPATH                 %{install_prefix}/share/man

setenv          %{PNAME}_DIR            %{install_prefix}
setenv          %{PNAME}_BIN            %{install_prefix}/bin
setenv          %{PNAME}_LIB            %{install_prefix}/lib
setenv          %{PNAME}_INC            %{install_prefix}/include

prereq oneapi
prereq mpich

EOF

%files
%defattr(-,root,root,-)
%{install_prefix}/*
%{module_prefix}/*

%changelog
* Wed Aug 15 2018 <christopher.m.cantalupo@intel.com> v0.5.1
- Initial commit.
