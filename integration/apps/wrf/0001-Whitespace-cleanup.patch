From 4c87740e2e59135c9f9b275e4b1d9c6cda147972 Mon Sep 17 00:00:00 2001
From: Lowren Lawson <lowren.h.lawson@intel.com>
Date: Thu, 29 Oct 2020 12:55:24 -0700
Subject: [PATCH 1/3] Whitespace cleanup
#
#  Copyright (c) 2015, 2016, 2017, 2018, 2019, 2020, Intel Corporation
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions
#  are met:
#
#      * Redistributions of source code must retain the above copyright
#        notice, this list of conditions and the following disclaimer.
#
#      * Redistributions in binary form must reproduce the above copyright
#        notice, this list of conditions and the following disclaimer in
#        the documentation and/or other materials provided with the
#        distribution.
#
#      * Neither the name of Intel Corporation nor the names of its
#        contributors may be used to endorse or promote products derived
#        from this software without specific prior written permission.
#
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
#  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
#  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
#  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
#  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
#  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
#  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
#  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY LOG OF THE USE
#  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

Signed-off-by: Lowren Lawson <lowren.h.lawson@intel.com>
---
 arch/configure_new.defaults | 338 ++++++++++++++++++++++----------------------
 1 file changed, 169 insertions(+), 169 deletions(-)

diff --git a/arch/configure_new.defaults b/arch/configure_new.defaults
index bc311ea..3a8b7a0 100644
--- a/arch/configure_new.defaults
+++ b/arch/configure_new.defaults
@@ -17,10 +17,10 @@ LD              =       $(FC)
 RWORDSIZE       =       CONFIGURE_RWORDSIZE
 PROMOTION       =       #-fdefault-real-8
 ARCH_LOCAL      =       -DNEC -DNONSTANDARD_SYSTEM_SUBR  -DWRF_USE_CLM
-CFLAGS_LOCAL    =       -c  
+CFLAGS_LOCAL    =       -c
 #-DNCARIBM_NOC99 -Xa -Kc99
 LDFLAGS_LOCAL   =       -Wl,-h nodefs
-CPLUSPLUSLIB    =       
+CPLUSPLUSLIB    =
 ESMF_LDFLAG     =       $(CPLUSPLUSLIB)
 FCOPTIM         =       -w -Chopt -Wf'-M noflunf -M nozdiv' -Wf,-L fmtlist transform,-pvctl fullmsg loopcnt=1000000 -f4 -Wf,-P i
 FCREDUCEDOPT	=       $(FCOPTIM)
@@ -28,7 +28,7 @@ FCNOOPT         =       -Cssafe
 FCDEBUG         =       # -g $(FCNOOPT)
 FORMAT_FIXED    =       -w -f3
 FORMAT_FREE     =       -w -f4
-FCSUFFIX        =       
+FCSUFFIX        =
 BYTESWAPIO      =       #-FIX_BYTE_SWAP_IF_NECESSARY_FOR_BIG_ENDIAN
 FCBASEOPTS_NO_G =       -w -Wf'-M noflunf -M nozdiv' $(FORMAT_FREE) $(BYTESWAPIO)
 FCBASEOPTS      =       $(FCBASEOPTS_NO_G) $(FCDEBUG)
@@ -39,9 +39,9 @@ AR              =      sxar
 ARFLAGS         =      ru
 M4              =      m4 -B 14000
 RANLIB          =      ls
-RLFLAGS		=	
+RLFLAGS		=
 #ranlib
-CC_TOOLS        =      cc 
+CC_TOOLS        =      cc
 
 ###########################################################
 #ARCH    Linux i486 i586 i686, gfortran compiler with gcc #serial smpar dmpar dm+sm
@@ -62,9 +62,9 @@ LD              =       $(FC)
 RWORDSIZE       =       CONFIGURE_RWORDSIZE
 PROMOTION       =       #-fdefault-real-8
 ARCH_LOCAL      =       -DNONSTANDARD_SYSTEM_SUBR  -DWRF_USE_CLM
-CFLAGS_LOCAL    =       -w -O3 -c 
+CFLAGS_LOCAL    =       -w -O3 -c
 LDFLAGS_LOCAL   =
-CPLUSPLUSLIB    =       
+CPLUSPLUSLIB    =
 ESMF_LDFLAG     =       $(CPLUSPLUSLIB)
 FCOPTIM         =       -O2 -ftree-vectorize -funroll-loops
 FCREDUCEDOPT	=       $(FCOPTIM)
@@ -72,7 +72,7 @@ FCNOOPT         =       -O0
 FCDEBUG         =       # -g $(FCNOOPT)  # -fbacktrace -ggdb -fcheck=bounds,do,mem,pointer -ffpe-trap=invalid,zero,overflow
 FORMAT_FIXED    =       -ffixed-form
 FORMAT_FREE     =       -ffree-form -ffree-line-length-none
-FCSUFFIX        =       
+FCSUFFIX        =
 BYTESWAPIO      =       -fconvert=big-endian -frecord-marker=4
 FCBASEOPTS_NO_G =       -w $(FORMAT_FREE) $(BYTESWAPIO)
 FCBASEOPTS      =       $(FCBASEOPTS_NO_G) $(FCDEBUG)
@@ -83,8 +83,8 @@ AR              =      ar
 ARFLAGS         =      ru
 M4              =      m4 -B 14000
 RANLIB          =      ranlib
-RLFLAGS		=	
-CC_TOOLS        =      $(SCC) 
+RLFLAGS		=
+CC_TOOLS        =      $(SCC)
 
 ###########################################################
 #ARCH    Linux i486 i586 i686, g95 compiler with gcc #serial dmpar
@@ -107,7 +107,7 @@ PROMOTION       =       -r$(RWORDSIZE) -i4
 ARCH_LOCAL      =       -DF2CSTYLE -DNONSTANDARD_SYSTEM_SUBR  -DWRF_USE_CLM
 CFLAGS_LOCAL    =       -DF2CSTYLE
 LDFLAGS_LOCAL   =
-CPLUSPLUSLIB    =       
+CPLUSPLUSLIB    =
 ESMF_LDFLAG     =       $(CPLUSPLUSLIB)
 FCOPTIM         =       -O2 #-fast
 FCREDUCEDOPT	=       $(FCOPTIM)
@@ -126,8 +126,8 @@ AR              =      ar
 ARFLAGS         =      ru
 M4              =      m4 -B 14000
 RANLIB          =      ranlib
-RLFLAGS		=	
-CC_TOOLS        =      $(SCC) 
+RLFLAGS		=
+CC_TOOLS        =      $(SCC)
 
 ###########################################################
 #ARCH    Linux x86_64 ppc64le i486 i586 i686, PGI compiler with gcc # serial smpar dmpar dm+sm
@@ -149,8 +149,8 @@ RWORDSIZE       =       CONFIGURE_RWORDSIZE
 PROMOTION       =       -r$(RWORDSIZE) -i4
 ARCH_LOCAL      =       -DNONSTANDARD_SYSTEM_SUBR  -DWRF_USE_CLM
 CFLAGS_LOCAL    =       -w -O3
-LDFLAGS_LOCAL   =       
-CPLUSPLUSLIB    =       
+LDFLAGS_LOCAL   =
+CPLUSPLUSLIB    =
 ESMF_LDFLAG     =       $(CPLUSPLUSLIB)
 FCOPTIM         =       -O3 #-fastsse -Mvect=noaltcode -Msmartalloc -Mprefetch=distance:8 -Mfprelaxed # -Minfo=all =Mneginfo=all
 FCREDUCEDOPT	=       $(FCOPTIM)
@@ -169,8 +169,8 @@ AR              =      ar
 ARFLAGS         =      ru
 M4              =      m4 -B 14000
 RANLIB          =      ranlib
-RLFLAGS		=	
-CC_TOOLS        =      $(SCC) 
+RLFLAGS		=
+CC_TOOLS        =      $(SCC)
 
 ###########################################################
 #ARCH    Linux x86_64 ppc64le, PGI compiler with pgcc, SGI MPT # serial smpar dmpar dm+sm
@@ -193,7 +193,7 @@ PROMOTION       =       -r$(RWORDSIZE) -i4
 ARCH_LOCAL      =       -DNONSTANDARD_SYSTEM_SUBR  -DWRF_USE_CLM
 CFLAGS_LOCAL    =       -w -O3
 LDFLAGS_LOCAL   =       -L$(MPI_ROOT)/lib -lmpi
-CPLUSPLUSLIB    =       
+CPLUSPLUSLIB    =
 ESMF_LDFLAG     =       $(CPLUSPLUSLIB)
 FCOPTIM         =       -O3 #-fastsse -Mvect=noaltcode -Msmartalloc -Mprefetch=distance:8 -Mfprelaxed # -Minfo=all =Mneginfo=all
 FCREDUCEDOPT	=       $(FCOPTIM)
@@ -212,8 +212,8 @@ AR              =      ar
 ARFLAGS         =      ru
 M4              =      m4 -B 14000
 RANLIB          =      ranlib
-RLFLAGS		=	
-CC_TOOLS        =      $(SCC) 
+RLFLAGS		=
+CC_TOOLS        =      $(SCC)
 
 ###########################################################
 #ARCH    Linux x86_64 ppc64le, PGI accelerator compiler with gcc # serial smpar dmpar dm+sm
@@ -254,8 +254,8 @@ AR              =      ar
 ARFLAGS         =      ru
 M4              =      m4 -B 14000
 RANLIB          =      ranlib
-RLFLAGS		=	
-CC_TOOLS        =      $(SCC) 
+RLFLAGS		=
+CC_TOOLS        =      $(SCC)
 
 ###########################################################
 #ARCH    Linux x86_64 ppc64le i486 i586 i686, ifort compiler with icc #serial smpar dmpar dm+sm
@@ -264,13 +264,13 @@ CC_TOOLS        =      $(SCC)
 #        respective makefile rules in the end of this file will result in longer compilation time, and, possibly
 #        Out Of Memory messages, but might produce binaries which are substantially faster.
 #
-#        Please visit http://www.intel.com/support/performancetools/sb/cs-028607.htm 
+#        Please visit http://www.intel.com/support/performancetools/sb/cs-028607.htm
 #        for latest info on how to build WRF with Intel compilers.
 #
 #        If you got Out Of Memory message, there are several options:
 #          1. Check your memory limits (ulimit -a), possibly increasing swap partitions size.
 #          2. Remove any debugging flags (-g, -check, -traceback).
-#          3. Force the problematic file to be compiled with less optimizations (see examples at the 
+#          3. Force the problematic file to be compiled with less optimizations (see examples at the
 #             end of this file), try -no-ip compiler flag.
 #
 #        This configuration is aimed at accuracy. To improve performance (at the expence of accuracy) you might
@@ -289,8 +289,8 @@ CC_TOOLS        =      $(SCC)
 #
 #        Suggestions for timing improvements from Craig Mattocks
 #
-#CFLAGS_LOCAL    =       -w -O3 -ip -fp-model precise -w -ftz -align all -fno-alias $(FORMAT_FREE) $(BYTESWAPIO) #-xHost -fp-model fast=2 -no-prec-div -no-prec-sqrt -ftz -no-multibyte-chars 
-#LDFLAGS_LOCAL   =       -ip -fp-model precise -w -ftz -align all -fno-alias $(FORMAT_FREE) $(BYTESWAPIO) #-xHost -fp-model fast=2 -no-prec-div -no-prec-sqrt -ftz -align all -fno-alias -fno-common 
+#CFLAGS_LOCAL    =       -w -O3 -ip -fp-model precise -w -ftz -align all -fno-alias $(FORMAT_FREE) $(BYTESWAPIO) #-xHost -fp-model fast=2 -no-prec-div -no-prec-sqrt -ftz -no-multibyte-chars
+#LDFLAGS_LOCAL   =       -ip -fp-model precise -w -ftz -align all -fno-alias $(FORMAT_FREE) $(BYTESWAPIO) #-xHost -fp-model fast=2 -no-prec-div -no-prec-sqrt -ftz -align all -fno-alias -fno-common
 #FCBASEOPTS_NO_G =       -w -ip -fp-model precise -w -ftz -align all -fno-alias $(FORMAT_FREE) $(BYTESWAPIO) #-xHost -fp-model fast=2 -no-heap-arrays -no-prec-div -no-prec-sqrt -ftz -align all -fno-alias -fno-common $(FORMAT_FREE) $(BYTESWAPIO)
 
 DESCRIPTION     =       INTEL ($SFC/$SCC)
@@ -311,7 +311,7 @@ PROMOTION       =       -real-size `expr 8 \* $(RWORDSIZE)` -i4
 ARCH_LOCAL      =       -DNONSTANDARD_SYSTEM_FUNC  -DWRF_USE_CLM
 CFLAGS_LOCAL    =       -w -O3 -ip #-xHost -fp-model fast=2 -no-prec-div -no-prec-sqrt -ftz -no-multibyte-chars
 LDFLAGS_LOCAL   =       -ip #-xHost -fp-model fast=2 -no-prec-div -no-prec-sqrt -ftz -align all -fno-alias -fno-common
-CPLUSPLUSLIB    =       
+CPLUSPLUSLIB    =
 ESMF_LDFLAG     =       $(CPLUSPLUSLIB)
 FCOPTIM         =       -O3
 FCREDUCEDOPT	=       $(FCOPTIM)
@@ -324,15 +324,15 @@ BYTESWAPIO      =       -convert big_endian
 RECORDLENGTH    =       -assume byterecl
 FCBASEOPTS_NO_G =       -ip -fp-model precise -w -ftz -align all -fno-alias $(FORMAT_FREE) $(BYTESWAPIO) #-xHost -fp-model fast=2 -no-heap-arrays -no-prec-div -no-prec-sqrt -fno-common
 FCBASEOPTS      =       $(FCBASEOPTS_NO_G) $(FCDEBUG)
-MODULE_SRCH_FLAG =     
+MODULE_SRCH_FLAG =
 TRADFLAG        =      CONFIGURE_TRADFLAG
 CPP             =      /lib/cpp CONFIGURE_CPPFLAGS
 AR              =      ar
 ARFLAGS         =      ru
 M4              =      m4
 RANLIB          =      ranlib
-RLFLAGS		=	
-CC_TOOLS        =      $(SCC) 
+RLFLAGS		=
+CC_TOOLS        =      $(SCC)
 
 ###########################################################
 #ARCH    Linux x86_64 ppc64le i486 i586 i686, Xeon Phi (MIC architecture) ifort compiler with icc # dm+sm
@@ -358,7 +358,7 @@ OPTNOSIMD       =
 OPTKNC          =       -fimf-precision=low -fimf-domain-exclusion=15 -opt-assume-safe-padding -opt-streaming-stores always -opt-streaming-cache-evict=0 -mP2OPT_hlo_pref_use_outer_strategy=F
 CFLAGS_LOCAL    =       -w -O3 $(OPTKNC)
 LDFLAGS_LOCAL   =       $(OPTKNC)
-CPLUSPLUSLIB    =       
+CPLUSPLUSLIB    =
 ESMF_LDFLAG     =       $(CPLUSPLUSLIB)
 FCOPTIM         =       -O3 $(OPTKNC)
 FCREDUCEDOPT	=       $(FCOPTIM)
@@ -371,14 +371,14 @@ BYTESWAPIO      =       -convert big_endian
 RECORDLENGTH    =       -assume byterecl
 FCBASEOPTS_NO_G =       -w -openmp -auto -ftz -fno-alias -fp-model fast=1 -no-prec-div -no-prec-sqrt $(FORMAT_FREE) $(BYTESWAPIO) -auto -align array64byte #-vec-report6
 FCBASEOPTS      =       $(FCBASEOPTS_NO_G) $(FCDEBUG)
-MODULE_SRCH_FLAG =     
+MODULE_SRCH_FLAG =
 TRADFLAG        =      CONFIGURE_TRADFLAG
 CPP             =      /lib/cpp CONFIGURE_CPPFLAGS
 AR              =      ar
 ARFLAGS         =      ru
 M4              =      m4
 RANLIB          =      ranlib
-RLFLAGS		=	
+RLFLAGS		=
 CC_TOOLS        =      gcc
 
 ###########################################################
@@ -390,9 +390,9 @@ DMPARALLEL      =       # 1
 OMPCPP          =       # -D_OPENMP
 OMP             =       # -openmp -fpp -auto
 OMPCC           =       # -openmp -fpp -auto
-SFC             =       ifort 
-SCC             =       icc 
-CCOMP           =       icc 
+SFC             =       ifort
+SCC             =       icc
+CCOMP           =       icc
 DM_FC           =       mpif90 -f90=$(SFC)
 DM_CC           =       mpicc -cc=$(SCC)
 FC              =       $(DM_FC)
@@ -405,7 +405,7 @@ OPTNOSIMD       =
 OPTAVX          =       -xAVX
 CFLAGS_LOCAL    =       -w -O3 $(OPTAVX)
 LDFLAGS_LOCAL   =       $(OPTAVX)
-CPLUSPLUSLIB    =       
+CPLUSPLUSLIB    =
 ESMF_LDFLAG     =       $(CPLUSPLUSLIB)
 FCOPTIM         =       -O3 $(OPTAVX)
 FCREDUCEDOPT	=       $(FCOPTIM)
@@ -418,14 +418,14 @@ BYTESWAPIO      =       -convert big_endian
 RECORDLENGTH    =       -assume byterecl
 FCBASEOPTS_NO_G =       -w $(OMP) -auto -ftz -fno-alias -fp-model fast=1 -no-prec-div -no-prec-sqrt $(FORMAT_FREE) $(BYTESWAPIO) -auto -align array64byte #-vec-report6
 FCBASEOPTS      =       $(FCBASEOPTS_NO_G) $(FCDEBUG)
-MODULE_SRCH_FLAG =     
+MODULE_SRCH_FLAG =
 TRADFLAG        =      CONFIGURE_TRADFLAG
 CPP             =      /lib/cpp CONFIGURE_CPPFLAGS
 AR              =      ar
 ARFLAGS         =      ru
 M4              =      m4
 RANLIB          =      ranlib
-RLFLAGS		=	
+RLFLAGS		=
 CC_TOOLS        =      gcc
 
 ###########################################################
@@ -435,13 +435,13 @@ CC_TOOLS        =      gcc
 #        respective makefile rules in the end of this file will result in longer compilation time, and, possibly
 #        Out Of Memory messages, but might produce binaries which are substantially faster.
 #
-#        Please visit http://www.intel.com/support/performancetools/sb/cs-028607.htm 
+#        Please visit http://www.intel.com/support/performancetools/sb/cs-028607.htm
 #        for latest info on how to build WRF with Intel compilers.
 #
 #        If you got Out Of Memory message, there are several options:
 #          1. Check your memory limits (ulimit -a), possibly increasing swap partitions size.
 #          2. Remove any debugging flags (-g, -check, -traceback).
-#          3. Force the problematic file to be compiled with less optimizations (see examples at the 
+#          3. Force the problematic file to be compiled with less optimizations (see examples at the
 #             end of this file), try -no-ip compiler flag.
 #
 #        This configuration is aimed at accuracy. To improve performance (at the expence of accuracy) you might
@@ -476,7 +476,7 @@ PROMOTION       =       -real-size `expr 8 \* $(RWORDSIZE)` -i4
 ARCH_LOCAL      =       -DNONSTANDARD_SYSTEM_FUNC  -DWRF_USE_CLM
 CFLAGS_LOCAL    =       -w -O3 -ip #-xHost -fp-model fast=2 -no-prec-div -no-prec-sqrt -ftz -no-multibyte-chars
 LDFLAGS_LOCAL   =       -ip -lmpi #-xHost -fp-model fast=2 -no-prec-div -no-prec-sqrt -ftz -align all -fno-alias -fno-common
-CPLUSPLUSLIB    =       
+CPLUSPLUSLIB    =
 ESMF_LDFLAG     =       $(CPLUSPLUSLIB)
 FCOPTIM         =       -O3
 FCREDUCEDOPT	=       $(FCOPTIM)
@@ -489,15 +489,15 @@ BYTESWAPIO      =       -convert big_endian
 RECORDLENGTH    =       -assume byterecl
 FCBASEOPTS_NO_G =       -ip -fp-model precise -w -ftz -align all -fno-alias $(FORMAT_FREE) $(BYTESWAPIO) #-xHost -fp-model fast=2 -no-heap-arrays -no-prec-div -no-prec-sqrt -fno-common
 FCBASEOPTS      =       $(FCBASEOPTS_NO_G) $(FCDEBUG)
-MODULE_SRCH_FLAG =     
+MODULE_SRCH_FLAG =
 TRADFLAG        =      CONFIGURE_TRADFLAG
 CPP             =      /lib/cpp CONFIGURE_CPPFLAGS
 AR              =      ar
 ARFLAGS         =      ru
 M4              =      m4
 RANLIB          =      ranlib
-RLFLAGS		=	
-CC_TOOLS        =      $(SCC) 
+RLFLAGS		=
+CC_TOOLS        =      $(SCC)
 
 ###########################################################
 #ARCH    Linux x86_64 ppc64le i486 i586 i686, ifort compiler with icc, IBM POE #serial smpar dmpar dm+sm
@@ -525,7 +525,7 @@ PROMOTION       =       -real-size `expr 8 \* $(RWORDSIZE)` -i4
 ARCH_LOCAL      =       -DNONSTANDARD_SYSTEM_FUNC  -DWRF_USE_CLM
 CFLAGS_LOCAL    =       -w -O3 -ip #-xHost -fp-model fast=2 -no-prec-div -no-prec-sqrt -ftz -no-multibyte-chars
 LDFLAGS_LOCAL   =       -ip #-xHost -fp-model fast=2 -no-prec-div -no-prec-sqrt -ftz -align all -fno-alias -fno-common
-CPLUSPLUSLIB    =       
+CPLUSPLUSLIB    =
 ESMF_LDFLAG     =       $(CPLUSPLUSLIB)
 FCOPTIM         =       -O3
 FCREDUCEDOPT	=       $(FCOPTIM)
@@ -538,15 +538,15 @@ BYTESWAPIO      =       -convert big_endian
 RECORDLENGTH    =       -assume byterecl
 FCBASEOPTS_NO_G =       -ip -fp-model precise -w -ftz -align all -fno-alias $(FORMAT_FREE) $(BYTESWAPIO) #-xHost -fp-model fast=2 -no-heap-arrays -no-prec-div -no-prec-sqrt -fno-common
 FCBASEOPTS      =       $(FCBASEOPTS_NO_G) $(FCDEBUG)
-MODULE_SRCH_FLAG =     
+MODULE_SRCH_FLAG =
 TRADFLAG        =      CONFIGURE_TRADFLAG
 CPP             =      /lib/cpp CONFIGURE_CPPFLAGS
 AR              =      ar
 ARFLAGS         =      ru
 M4              =      m4
 RANLIB          =      ranlib
-RLFLAGS		=	
-CC_TOOLS        =      $(SCC) 
+RLFLAGS		=
+CC_TOOLS        =      $(SCC)
 
 ###########################################################
 #ARCH    ia64 Linux ifort compiler with icc 9.x,10.x #serial smpar dmpar dm+sm
@@ -557,7 +557,7 @@ CC_TOOLS        =      $(SCC)
 #        possibly Out Of Memory messages, but might produce binaries
 #        which are substantially faster.
 #
-#        Please visit http://www.intel.com/support/performancetools/sb/cs-028607.htm 
+#        Please visit http://www.intel.com/support/performancetools/sb/cs-028607.htm
 #        for latest info on how to build WRF with Intel compilers.
 #
 #        If you get Out Of Memory messages, there are several options:
@@ -604,7 +604,7 @@ PROMOTION       =       -real-size `expr 8 \* $(RWORDSIZE)` -i4
 ARCH_LOCAL      =       -DNONSTANDARD_SYSTEM_FUNC  -DWRF_USE_CLM
 CFLAGS_LOCAL    =       -w -O3 -ip #-xHost -fp-model fast=2 -no-prec-div -no-prec-sqrt -ftz -no-multibyte-chars
 LDFLAGS_LOCAL   =       -ip #-xHost -fp-model fast=2 -no-prec-div -no-prec-sqrt -ftz -align all -fno-alias -fno-common
-CPLUSPLUSLIB    =       
+CPLUSPLUSLIB    =
 ESMF_LDFLAG     =       $(CPLUSPLUSLIB)
 FCOPTIM         =       -O3
 FCREDUCEDOPT	=       $(FCOPTIM)
@@ -618,16 +618,16 @@ RECORDLENGTH    =       -assume byterecl
 FCBASEOPTS_NO_G =       -ip -fp-model precise -w -ftz -align all -fno-alias $(FORMAT_FREE) $(BYTESWAPIO) #-xHost -fp-model fast=2 -no-heap-arrays -no-prec-div -no-prec-sqrt -fno-common
 #FCBASEOPTS_NO_G =       -w -ftz -align all -fno-alias -IPF-fp-relaxed $(FORMAT_FREE) $(BYTESWAPIO)
 FCBASEOPTS      =       $(FCBASEOPTS_NO_G) $(FCDEBUG)
-LIB_LOCAL       =       -L/usr/lib -lmpi 
-MODULE_SRCH_FLAG =     
+LIB_LOCAL       =       -L/usr/lib -lmpi
+MODULE_SRCH_FLAG =
 TRADFLAG        =      CONFIGURE_TRADFLAG
 CPP             =      /lib/cpp CONFIGURE_CPPFLAGS
 AR              =      ar
 ARFLAGS         =      ru
 M4              =      m4
 RANLIB          =      ranlib
-RLFLAGS		=	
-CC_TOOLS        =      $(SCC) 
+RLFLAGS		=
+CC_TOOLS        =      $(SCC)
 
 ###########################################################
 #ARCH    Linux SGI Altix, ifort compiler with icc 9.x,10.x #serial smpar dmpar dm+sm
@@ -646,7 +646,7 @@ CC_TOOLS        =      $(SCC)
 #             optimization (see examples at the end of this file),
 #             try the -no-ip compiler flag.
 #
-#        Please visit http://www.intel.com/support/performancetools/sb/cs-028607.htm 
+#        Please visit http://www.intel.com/support/performancetools/sb/cs-028607.htm
 #        for latest info on how to build WRF with Intel compilers.
 #
 #        The default configuration is aimed at accuracy. To improve speed
@@ -667,7 +667,7 @@ CC_TOOLS        =      $(SCC)
 #        DM_CC and LIB_LOCAL settings as follows:
 #        DM_FC = $(SFC) -I$(MPI_HOME)/include
 #        DM_CC = $(SFC) -I$(MPI_HOME)/include
-#        LIB_LOCAL = -L$(MPI_HOME)/lib -lmpi 
+#        LIB_LOCAL = -L$(MPI_HOME)/lib -lmpi
 
 DESCRIPTION     =       INTEL ($SFC/$SCC): SGI Altix
 DMPARALLEL      =       # 1
@@ -687,7 +687,7 @@ PROMOTION       =       -real-size `expr 8 \* $(RWORDSIZE)` -i4
 ARCH_LOCAL      =       -DNONSTANDARD_SYSTEM_FUNC  -DWRF_USE_CLM
 CFLAGS_LOCAL    =       -w -O3 -ip #-xHost -fp-model fast=2 -no-prec-div -no-prec-sqrt -ftz -no-multibyte-chars
 LDFLAGS_LOCAL   =       -ip #-xHost -fp-model fast=2 -no-prec-div -no-prec-sqrt -ftz -align all -fno-alias -fno-common
-CPLUSPLUSLIB    =       
+CPLUSPLUSLIB    =
 ESMF_LDFLAG     =       $(CPLUSPLUSLIB)
 FCOPTIM         =       -O3
 FCREDUCEDOPT	=       $(FCOPTIM)
@@ -701,16 +701,16 @@ RECORDLENGTH    =       -assume byterecl
 FCBASEOPTS_NO_G =       -ip -fp-model precise -w -ftz -align all -fno-alias $(FORMAT_FREE) $(BYTESWAPIO) #-xHost -fp-model fast=2 -no-heap-arrays -no-prec-div -no-prec-sqrt -fno-common
 #FCBASEOPTS_NO_G =       -w -ftz -align all -fno-alias -IPF-fp-relaxed $(FORMAT_FREE) $(BYTESWAPIO)
 FCBASEOPTS      =       $(FCBASEOPTS_NO_G) $(FCDEBUG)
-LIB_LOCAL       =       -L/usr/lib -lmpi 
-MODULE_SRCH_FLAG =     
+LIB_LOCAL       =       -L/usr/lib -lmpi
+MODULE_SRCH_FLAG =
 TRADFLAG        =      CONFIGURE_TRADFLAG
 CPP             =      /lib/cpp CONFIGURE_CPPFLAGS
 AR              =      ar
 ARFLAGS         =      ru
 M4              =      m4
 RANLIB          =      ranlib
-RLFLAGS		=	
-CC_TOOLS        =      $(SCC) 
+RLFLAGS		=
+CC_TOOLS        =      $(SCC)
 
 ###########################################################
 #ARCH    Linux i486 i586 i686 x86_64 ppc64le, PathScale compiler with pathcc #serial dmpar
@@ -731,14 +731,14 @@ LD              =       $(FC)
 RWORDSIZE       =       CONFIGURE_RWORDSIZE
 PROMOTION       =       -r$(RWORDSIZE) -i4
 ARCH_LOCAL      =       -DNONSTANDARD_SYSTEM_SUBR  -DWRF_USE_CLM -D__PATHSCALE__
-CFLAGS_LOCAL    =       
+CFLAGS_LOCAL    =
 LDFLAGS_LOCAL   =
-CPLUSPLUSLIB    =       
+CPLUSPLUSLIB    =
 ESMF_LDFLAG     =       $(CPLUSPLUSLIB)
 FCOPTIM         =       -O -OPT:Ofast:Olimit=5000
 FCREDUCEDOPT	=       $(FCOPTIM)
 FCNOOPT         =       -O0
-FCDEBUG         =       # -g $(FCNOOPT)  # -C -trapuv 
+FCDEBUG         =       # -g $(FCNOOPT)  # -C -trapuv
 FORMAT_FIXED    =       -fixedform
 FORMAT_FREE     =       -freeform
 FCSUFFIX        =
@@ -752,8 +752,8 @@ AR              =      ar
 ARFLAGS         =      ru
 M4              =      m4 -B 14000
 RANLIB          =      ranlib
-RLFLAGS		=	
-CC_TOOLS        =      $(SCC) 
+RLFLAGS		=
+CC_TOOLS        =      $(SCC)
 
 ###########################################################
 #ARCH    Linux x86_64 ppc64le, gfortran compiler with gcc  #serial smpar dmpar dm+sm
@@ -774,9 +774,9 @@ LD              =       $(FC)
 RWORDSIZE       =       CONFIGURE_RWORDSIZE
 PROMOTION       =       #-fdefault-real-8
 ARCH_LOCAL      =       -DNONSTANDARD_SYSTEM_SUBR  -DWRF_USE_CLM
-CFLAGS_LOCAL    =       -w -O3 -c 
-LDFLAGS_LOCAL   =       
-CPLUSPLUSLIB    =       
+CFLAGS_LOCAL    =       -w -O3 -c
+LDFLAGS_LOCAL   =
+CPLUSPLUSLIB    =
 ESMF_LDFLAG     =       $(CPLUSPLUSLIB)
 FCOPTIM         =       -O2 -ftree-vectorize -funroll-loops
 FCREDUCEDOPT	=       $(FCOPTIM)
@@ -784,19 +784,19 @@ FCNOOPT		=       -O0
 FCDEBUG         =       # -g $(FCNOOPT) # -ggdb -fbacktrace -fcheck=bounds,do,mem,pointer -ffpe-trap=invalid,zero,overflow
 FORMAT_FIXED    =       -ffixed-form
 FORMAT_FREE     =       -ffree-form -ffree-line-length-none
-FCSUFFIX        =       
+FCSUFFIX        =
 BYTESWAPIO      =       -fconvert=big-endian -frecord-marker=4
 FCBASEOPTS_NO_G =       -w $(FORMAT_FREE) $(BYTESWAPIO)
 FCBASEOPTS      =       $(FCBASEOPTS_NO_G) $(FCDEBUG)
-MODULE_SRCH_FLAG =     
+MODULE_SRCH_FLAG =
 TRADFLAG        =      CONFIGURE_TRADFLAG
 CPP             =      /lib/cpp CONFIGURE_CPPFLAGS
 AR              =      ar
 ARFLAGS         =      ru
 M4              =      m4 -G
 RANLIB          =      ranlib
-RLFLAGS		=	
-CC_TOOLS        =      $(SCC) 
+RLFLAGS		=
+CC_TOOLS        =      $(SCC)
 
 ###########################################################
 #ARCH    Darwin (MACOS) PGI compiler with pgcc #serial smpar dmpar dm+sm
@@ -818,8 +818,8 @@ RWORDSIZE       =       CONFIGURE_RWORDSIZE
 PROMOTION       =       -r$(RWORDSIZE) -i4
 ARCH_LOCAL      =       -DMACOS -DNONSTANDARD_SYSTEM_SUBR  -DWRF_USE_CLM
 CFLAGS_LOCAL    =       -DMACOS
-LDFLAGS_LOCAL   =       
-CPLUSPLUSLIB    =       
+LDFLAGS_LOCAL   =
+CPLUSPLUSLIB    =
 ESMF_LDFLAG     =       $(CPLUSPLUSLIB)
 FCOPTIM         =       -O2 -fast
 FCREDUCEDOPT	=       $(FCOPTIM)
@@ -827,7 +827,7 @@ FCNOOPT		=       -O0
 FCDEBUG         =       # -g $(FCNOOPT) # -C -Ktrap=fp -traceback
 FORMAT_FIXED    =       -Mfixed
 FORMAT_FREE     =       -Mfree
-FCSUFFIX        =       
+FCSUFFIX        =
 BYTESWAPIO      =       -byteswapio
 FCBASEOPTS_NO_G =       -w $(FORMAT_FREE) $(BYTESWAPIO) $(OMP)
 FCBASEOPTS      =       $(FCBASEOPTS_NO_G) $(FCDEBUG) -Mnomod
@@ -863,7 +863,7 @@ ARCH_LOCAL      =       -DMACOS -DNONSTANDARD_SYSTEM_FUNC  -DWRF_USE_CLM
 CFLAGS_LOCAL    =       -w -O3 -ip -DMACOS #-xHost -fp-model fast=2 -no-prec-div -no-prec-sqrt -ftz -no-multibyte-chars -DMACOS
 # increase stack size; also note that for OpenMP, set environment OMP_STACKSIZE 4G or greater
 LDFLAGS_LOCAL   =       -ip -Wl,-stack_addr,0xF10000000 -Wl,-stack_size,0x64000000 #-xHost -fp-model fast=2 -no-prec-div -no-prec-sqrt -ftz -align all -fno-alias -fno-common
-CPLUSPLUSLIB    =       
+CPLUSPLUSLIB    =
 ESMF_LDFLAG     =       $(CPLUSPLUSLIB)
 FCOPTIM         =       -O3
 FCREDUCEDOPT	=       $(FCOPTIM)
@@ -909,7 +909,7 @@ ARCH_LOCAL      =       -DMACOS -DNONSTANDARD_SYSTEM_FUNC  -DWRF_USE_CLM
 CFLAGS_LOCAL    =       -w -O3 -DMACOS #-xHost -fp-model fast=2 -no-prec-div -no-prec-sqrt -ftz -no-multibyte-chars -DMACOS
 # increase stack size; also note that for OpenMP, set environment OMP_STACKSIZE 4G or greater
 LDFLAGS_LOCAL   =       -Wl,-stack_addr,0xF10000000 -Wl,-stack_size,0x64000000 #-xHost -fp-model fast=2 -no-prec-div -no-prec-sqrt -ftz -align all -fno-alias -fno-common
-CPLUSPLUSLIB    =       
+CPLUSPLUSLIB    =
 ESMF_LDFLAG     =       $(CPLUSPLUSLIB)
 FCOPTIM         =       -O3
 FCREDUCEDOPT	=       $(FCOPTIM)
@@ -953,7 +953,7 @@ PROMOTION       =       -r$(RWORDSIZE) -i4
 ARCH_LOCAL      =       -DG95 -DMACOS -DF2CSTYLE -DNONSTANDARD_SYSTEM_SUBR -DRCONFIG_CHARLEN=64  -DWRF_USE_CLM
 CFLAGS_LOCAL    =       -DMACOS -DF2CSTYLE
 LDFLAGS_LOCAL   =
-CPLUSPLUSLIB    =       
+CPLUSPLUSLIB    =
 ESMF_LDFLAG     =       $(CPLUSPLUSLIB)
 FCOPTIM         =       -O2 # -fast
 FCREDUCEDOPT	=       $(FCOPTIM)
@@ -974,7 +974,7 @@ ARFLAGS         =      ru
 M4              =      m4 -B 14000
 RANLIB          =      ranlib -c
 RLFLAGS		=	-c
-CC_TOOLS        =      $(SCC) 
+CC_TOOLS        =      $(SCC)
 
 ###########################################################
 #ARCH    Darwin (MACOS) gfortran with gcc #serial smpar dmpar dm+sm
@@ -997,7 +997,7 @@ PROMOTION       =       #-fdefault-real-8
 ARCH_LOCAL      =       -DNONSTANDARD_SYSTEM_SUBR -DMACOS  -DWRF_USE_CLM
 CFLAGS_LOCAL    =       -w -O3 -c  -DMACOS
 LDFLAGS_LOCAL   =
-CPLUSPLUSLIB    =       
+CPLUSPLUSLIB    =
 ESMF_LDFLAG     =       $(CPLUSPLUSLIB)
 FCOPTIM         =       -O2 -ftree-vectorize -funroll-loops
 FCREDUCEDOPT	=       $(FCOPTIM)
@@ -1005,7 +1005,7 @@ FCNOOPT         =       -O0
 FCDEBUG         =       # -g $(FCNOOPT) # -fbacktrace -ggdb -fcheck=bounds,do,mem,pointer -ffpe-trap=invalid,zero,overflow
 FORMAT_FIXED    =       -ffixed-form
 FORMAT_FREE     =       -ffree-form -ffree-line-length-none
-FCSUFFIX        =       
+FCSUFFIX        =
 BYTESWAPIO      =       -fconvert=big-endian -frecord-marker=4
 FCBASEOPTS_NO_G =       -w $(FORMAT_FREE) $(BYTESWAPIO)
 FCBASEOPTS      =       $(FCBASEOPTS_NO_G) $(FCDEBUG)
@@ -1017,7 +1017,7 @@ ARFLAGS         =      ru
 M4              =      m4 -B 14000
 RANLIB          =      ranlib
 RLFLAGS		=	-c
-CC_TOOLS        =      $(SCC) 
+CC_TOOLS        =      $(SCC)
 
 ###########################################################
 #ARCH    Darwin (MACOS) gfortran with clang #serial smpar dmpar dm+sm
@@ -1040,7 +1040,7 @@ PROMOTION       =       #-fdefault-real-8
 ARCH_LOCAL      =       -DNONSTANDARD_SYSTEM_SUBR -DMACOS -DWRF_USE_CLM
 CFLAGS_LOCAL    =       -w -O3 -c  -DMACOS
 LDFLAGS_LOCAL   =
-CPLUSPLUSLIB    =       
+CPLUSPLUSLIB    =
 ESMF_LDFLAG     =       $(CPLUSPLUSLIB)
 FCOPTIM         =       -O2 -ftree-vectorize -funroll-loops
 FCREDUCEDOPT	=       $(FCOPTIM)
@@ -1048,7 +1048,7 @@ FCNOOPT         =       -O0
 FCDEBUG         =       # -g $(FCNOOPT) # -fbacktrace -ggdb -fcheck=bounds,do,mem,pointer -ffpe-trap=invalid,zero,overflow
 FORMAT_FIXED    =       -ffixed-form
 FORMAT_FREE     =       -ffree-form -ffree-line-length-none
-FCSUFFIX        =       
+FCSUFFIX        =
 BYTESWAPIO      =       -fconvert=big-endian -frecord-marker=4
 FCBASEOPTS_NO_G =       -w $(FORMAT_FREE) $(BYTESWAPIO)
 FCBASEOPTS      =       $(FCBASEOPTS_NO_G) $(FCDEBUG)
@@ -1083,9 +1083,9 @@ PROMOTION       =        -qrealsize=$(RWORDSIZE) -qintsize=4
 ARCH_LOCAL      =       -DMAC_KLUDGE -DF2CSTYLE -DNONSTANDARD_SYSTEM_SUBR  -DWRF_USE_CLM
 CFLAGS_LOCAL    =       -DMACOS -DF2CSTYLE
 LDFLAGS_LOCAL   =
-CPLUSPLUSLIB    =       
+CPLUSPLUSLIB    =
 ESMF_LDFLAG     =       $(CPLUSPLUSLIB)
-CPLUSPLUSLIB    =       
+CPLUSPLUSLIB    =
 ESMF_LDFLAG     =       $(CPLUSPLUSLIB)
 FCOPTIM         =       -O3 -qarch=auto
 FCREDUCEDOPT	=       $(FCOPTIM)
@@ -1094,18 +1094,18 @@ FCDEBUG         =       # -g $(FCNOOPT) -qfullpath
 FORMAT_FIXED    =       -qfixed
 FORMAT_FREE     =       -qfree=f90
 FCSUFFIX        =       -qsuffix=f=f90
-BYTESWAPIO      =       
+BYTESWAPIO      =
 FCBASEOPTS_NO_G =       -qsave -qmaxmem=32767 -qspillsize=32767 -w
 FCBASEOPTS      =       $(FCBASEOPTS_NO_G) $(FCDEBUG)
 MODULE_SRCH_FLAG =     -fmod=$(WRF_SRC_ROOT_DIR)/main
 TRADFLAG        =      CONFIGURE_TRADFLAG
-CPP             =      cpp CONFIGURE_CPPFLAGS 
+CPP             =      cpp CONFIGURE_CPPFLAGS
 AR              =      ar
 ARFLAGS         =      ru
 M4              =      m4 -B 14000
 RANLIB          =      ranlib
 RLFLAGS		=	-c
-CC_TOOLS        =      $(SCC) 
+CC_TOOLS        =      $(SCC)
 
 ###########################################################
 #ARCH    AIX xlf compiler with xlc #serial smpar dmpar dm+sm
@@ -1131,9 +1131,9 @@ CFLAGS_LOCAL    =       -DNOUNDERSCORE
 LDFLAGS_LOCAL   =       -lmass -lmassv -bnoquiet # print diagnostic messages
 CPLUSPLUSLIB    =       -lC
 ESMF_LDFLAG     =       $(CPLUSPLUSLIB)
-# -qhot commented out in 3.0.1.1 release because of reported problems with 
+# -qhot commented out in 3.0.1.1 release because of reported problems with
 # model results under certain configurations. Use at your own risk.
-# -qstrict added in 3.6.1 release because of reported problems with 
+# -qstrict added in 3.6.1 release because of reported problems with
 # model stability under certain configurations. Use at your own risk.
 FCOPTIM         =       -O3 -qstrict # -qhot
 FCREDUCEDOPT    =       -O2 # implies -qstrict
@@ -1142,17 +1142,17 @@ FCDEBUG         =       # -g $(FCNOOPT) -qfullpath
 FORMAT_FIXED    =       -qfixed
 FORMAT_FREE     =       -qfree=f90
 FCSUFFIX        =       -qsuffix=f=f90
-BYTESWAPIO      =       
+BYTESWAPIO      =
 FCBASEOPTS_NO_G =       -w -qspill=81920 -qmaxmem=-1 $(FORMAT_FREE) $(BYTESWAPIO)  #-qflttrap=zerodivide:invalid:enable -qsigtrap -C # -qinitauto=7FF7FFFF
 FCBASEOPTS      =       $(FCBASEOPTS_NO_G) $(FCDEBUG)
-MODULE_SRCH_FLAG =     
+MODULE_SRCH_FLAG =
 TRADFLAG        =       #CONFIGURE_TRADFLAG  # causing troubles with xl cpp on AIX, -traditional removed fom default settings
 CPP             =       /lib/cpp CONFIGURE_CPPFLAGS
 AR              =       ar
 ARFLAGS         =       ru
 M4              =       m4 -B 20000
 RANLIB          =       ranlib
-RLFLAGS		=	
+RLFLAGS		=
 CC_TOOLS        =       cc
 
 ###########################################################
@@ -1179,31 +1179,31 @@ CFLAGS_LOCAL    =       -DNOUNDERSCORE
 LDFLAGS_LOCAL   =       -lmass_64 -lmassvp7_64 -q64 -bnoquiet # linking diagnostics
 CPLUSPLUSLIB    =       -lC
 ESMF_LDFLAG     =       $(CPLUSPLUSLIB)
-# -qhot commented out in 3.0.1.1 release because of reported problems with 
+# -qhot commented out in 3.0.1.1 release because of reported problems with
 # model results under certain configurations. Use at your own risk.
-# -qstrict added in 3.6.1 release because of reported problems with 
+# -qstrict added in 3.6.1 release because of reported problems with
 # model stability under certain configurations. Use at your own risk.
 FCOPTIM         =       -q64 -O3 -qstrict # -qhot
-# if linking problems with libxlsmp occur, try -qsmp=noauto 
+# if linking problems with libxlsmp occur, try -qsmp=noauto
 FCREDUCEDOPT    =       -q64 -O2
 FCNOOPT         =       -q64 -qnoopt -qstrict # -qsmp=noauto
 FCDEBUG         =       # -g $(FCNOOPT) -qfullpath
 FORMAT_FIXED    =       -qfixed
 FORMAT_FREE     =       -qfree=f90
 FCSUFFIX        =       -qsuffix=f=f90
-BYTESWAPIO      =       
+BYTESWAPIO      =
 FCBASEOPTS_NO_G =       -w -qspill=81920 -qmaxmem=-1 $(FORMAT_FREE) $(BYTESWAPIO)  #-qflttrap=zerodivide:invalid:enable -qsigtrap -C # -qinitauto=7FF7FFFF
 FCBASEOPTS      =       $(FCBASEOPTS_NO_G) $(FCDEBUG)
-MODULE_SRCH_FLAG =     
-TRADFLAG        =       
-# instead of the GNU CPP, the CPP shipped with XLF should be used, 
+MODULE_SRCH_FLAG =
+TRADFLAG        =
+# instead of the GNU CPP, the CPP shipped with XLF should be used,
 # which does not work with the -traditional flag
 CPP             =       $(XLF_BASE)/exe/cpp CONFIGURE_CPPFLAGS
 AR              =       ar
 ARFLAGS         =       ru
 M4              =       m4 -B 14000
 RANLIB          =       ranlib
-RLFLAGS		=	
+RLFLAGS		=
 CC_TOOLS        =       cc
 
 ###########################################################
@@ -1233,7 +1233,7 @@ CFLAGS_LOCAL    =       -w -O3
 LDFLAGS_LOCAL   =
 # module load libfast to use Cray XT fast math library
 #LIB_LOCAL       =       -lfast_mv
-CPLUSPLUSLIB    =       
+CPLUSPLUSLIB    =
 ESMF_LDFLAG     =       $(CPLUSPLUSLIB)
 # PGI recommended
 FCOPTIM         =       -O3 #-fastsse -Mvect=noaltcode -Msmartalloc -Mprefetch=distance:8 -Mfprelaxed # -Minfo=all =Mneginfo=all
@@ -1258,15 +1258,15 @@ FCSUFFIX        =
 BYTESWAPIO      =       -byteswapio
 FCBASEOPTS_NO_G =       -w $(FORMAT_FREE) $(BYTESWAPIO) $(OPTERON_TYPE) $(OMP)
 FCBASEOPTS      =       $(FCBASEOPTS_NO_G) $(FCDEBUG)
-MODULE_SRCH_FLAG =    
+MODULE_SRCH_FLAG =
 TRADFLAG        =      CONFIGURE_TRADFLAG
 CPP             =      /lib/cpp CONFIGURE_CPPFLAGS $(TRADFLAG)
 AR              =      ar
 ARFLAGS         =      ru
 M4              =      m4 -B 14000
 RANLIB          =      ranlib
-RLFLAGS		=	
-CC_TOOLS        =      $(SCC) 
+RLFLAGS		=
+CC_TOOLS        =      $(SCC)
 
 ###########################################################
 #ARCH    Cray XE and XC CLE/Linux x86_64, Cray CCE compiler # serial dmpar smpar dm+sm
@@ -1281,8 +1281,8 @@ OMPCPP          =       # -D_OPENMP
 OMP             =       # -homp
 OMPCC           =       # -homp
 SFC             =       ftn $(NOOMP)
-SCC             =       cc 
-CCOMP           =       gcc 
+SCC             =       cc
+CCOMP           =       gcc
 DM_FC           =       ftn $(NOOMP)
 DM_CC           =       cc
 FC              =       $(DM_FC)
@@ -1291,14 +1291,14 @@ LD              =       $(FC)
 RWORDSIZE       =       CONFIGURE_RWORDSIZE
 PROMOTION       =       -s integer32 -s real`expr 8 \* $(RWORDSIZE)`
 ARCH_LOCAL      =       -DNONSTANDARD_SYSTEM_SUBR  -DWRF_USE_CLM
-CFLAGS_LOCAL    =       -O3 
-LDFLAGS_LOCAL   =       
+CFLAGS_LOCAL    =       -O3
+LDFLAGS_LOCAL   =
 # uncomment this for wrfda build
 #LIB_LOCAL       =       -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
 #                        -L$(WRF_SRC_ROOT_DIR)/external/RSL_LITE -lrsl_lite
-CPLUSPLUSLIB    =       
+CPLUSPLUSLIB    =
 ESMF_LDFLAG     =       $(CPLUSPLUSLIB)
-FCOPTIM         =       # -Ofp3 
+FCOPTIM         =       # -Ofp3
 FCREDUCEDOPT	=       $(FCOPTIM)
 FCNOOPT		=       -O1 -Ofp1 -Oipa0 -Onomodinline
 FCDEBUG         =       # -g -O0 # -K trap=fp -R bc
@@ -1308,14 +1308,14 @@ FCSUFFIX        =
 BYTESWAPIO      =       -h byteswapio
 FCBASEOPTS_NO_G =       -N1023 $(FORMAT_FREE) $(BYTESWAPIO) #-ra
 FCBASEOPTS      =       $(FCBASEOPTS_NO_G) $(FCDEBUG)
-MODULE_SRCH_FLAG =     
+MODULE_SRCH_FLAG =
 TRADFLAG        =      CONFIGURE_TRADFLAG
 CPP             =      /lib/cpp CONFIGURE_CPPFLAGS
 AR              =      ar
 ARFLAGS         =      ru
 M4              =      m4
 RANLIB          =      ranlib
-RLFLAGS		=	
+RLFLAGS		=
 CC_TOOLS        =      gcc
 
 ###########################################################
@@ -1328,8 +1328,8 @@ OMPCPP          =       # -D_OPENMP
 OMP             =       # -openmp -fpp -auto
 OMPCC           =       # -openmp -fpp -auto
 SFC             =       ftn
-SCC             =       icc 
-CCOMP           =       icc 
+SCC             =       icc
+CCOMP           =       icc
 DM_FC           =       ftn
 DM_CC           =       cc
 FC              =       $(DM_FC)
@@ -1343,7 +1343,7 @@ OPTNOSIMD       =
 #OPTAVX          =       -xAVX
 CFLAGS_LOCAL    =       -w -O3 -ip $(OPTAVX)
 LDFLAGS_LOCAL   =       $(OPTAVX)
-CPLUSPLUSLIB    =       
+CPLUSPLUSLIB    =
 ESMF_LDFLAG     =       $(CPLUSPLUSLIB)
 FCOPTIM         =       -ip -O3 $(OPTAVX)
 FCREDUCEDOPT	=       $(FCOPTIM)
@@ -1357,14 +1357,14 @@ RECORDLENGTH    =       -assume byterecl
 #add -fp-model precise in FCBASEOPTS_NO_G to improve the accuracy of WRFPLUS check_AD test, suggested by Thomas Schwitalla.
 FCBASEOPTS_NO_G =       -w -ftz -fno-alias -align all $(FORMAT_FREE) $(BYTESWAPIO) #-fp-model precise #-vec-report6
 FCBASEOPTS      =       $(FCBASEOPTS_NO_G) $(FCDEBUG)
-MODULE_SRCH_FLAG =     
+MODULE_SRCH_FLAG =
 TRADFLAG        =      CONFIGURE_TRADFLAG
 CPP             =      /lib/cpp CONFIGURE_CPPFLAGS
 AR              =      ar
 ARFLAGS         =      ru
 M4              =      m4
 RANLIB          =      ranlib
-RLFLAGS		=	
+RLFLAGS		=
 CC_TOOLS        =      gcc
 
 
@@ -1391,10 +1391,10 @@ RWORDSIZE       =       CONFIGURE_RWORDSIZE
 PROMOTION       =        -qrealsize=$(RWORDSIZE) -qintsize=4
 # If system has even more processors, set VERY_LARGE_MAXPROC to that number
 ARCH_LOCAL      =       -DMOVE_NL_OUTSIDE_MODULE_CONFIGURE -DNONSTANDARD_SYSTEM_SUBR  -DVERY_LARGE_MAXPROC=36768 -DBLUEGENE  -DWRF_USE_CLM
-CFLAGS_LOCAL    =       -DNOUNDERSCORE -DNCARIBM_NOC99 $(MPI_INC)  
+CFLAGS_LOCAL    =       -DNOUNDERSCORE -DNCARIBM_NOC99 $(MPI_INC)
 LIB_LOCAL       =       $(MPI_LIB)
 LDFLAGS_LOCAL   =       -Wl,--allow-multiple-definition -qstatic
-CPLUSPLUSLIB    =       
+CPLUSPLUSLIB    =
 ESMF_LDFLAG     =       $(CPLUSPLUSLIB)
 FCOPTIM         =       -O2 -qarch=440
 FCNOOPT		=       -qnoopt
@@ -1402,10 +1402,10 @@ FCDEBUG         =       # $(FCNOOPT) -qfullpath
 FORMAT_FIXED    =       -qfixed
 FORMAT_FREE     =       -qfree=f90
 FCSUFFIX        =       -qsuffix=f=f90
-BYTESWAPIO      =       
+BYTESWAPIO      =
 FCBASEOPTS_NO_G =       -w -qspill=20000 -qmaxmem=64000 $(FORMAT_FREE) $(BYTESWAPIO) $(MPI_INC) #-qflttrap=zerodivide:invalid:enable -qsigtrap
 FCBASEOPTS      =       $(FCBASEOPTS_NO_G) $(FCDEBUG)
-MODULE_SRCH_FLAG =     
+MODULE_SRCH_FLAG =
 TRADFLAG        =       CONFIGURE_TRADFLAG
 # this might be different on different systems but we want the xlf version of cpp, not Linux's
 # NYBlue
@@ -1416,7 +1416,7 @@ AR              =       ar
 ARFLAGS         =       ru
 M4              =       m4 -B 14000
 RANLIB          =       ranlib
-RLFLAGS		=	
+RLFLAGS		=
 CC_TOOLS        =       cc
 ###########################################################
 #ARCH    Linux ppc64 BG /P xlf compiler with xlc # smpar dmpar dm+sm
@@ -1440,10 +1440,10 @@ RWORDSIZE       =       CONFIGURE_RWORDSIZE
 PROMOTION       =        -qrealsize=$(RWORDSIZE) -qintsize=4
 # If system has even more processors, set VERY_LARGE_MAXPROC to that number
 ARCH_LOCAL      =       -DMOVE_NL_OUTSIDE_MODULE_CONFIGURE -DNONSTANDARD_SYSTEM_SUBR  -DVERY_LARGE_MAXPROC=36768 -DBLUEGENE  -DWRF_USE_CLM
-CFLAGS_LOCAL    =       -DNOUNDERSCORE 
+CFLAGS_LOCAL    =       -DNOUNDERSCORE
 LIB_LOCAL       =
 LDFLAGS_LOCAL   =       -Wl,--allow-multiple-definition,--relax -qstatic
-CPLUSPLUSLIB    =       
+CPLUSPLUSLIB    =
 ESMF_LDFLAG     =       $(CPLUSPLUSLIB)
 FCOPTIM         =       -O3 -qnoipa -qarch=auto -qcache=auto -qtune=auto
 FCNOOPT		=       -qnoopt
@@ -1451,10 +1451,10 @@ FCDEBUG         =       # $(FCNOOPT) -g -qfullpath
 FORMAT_FIXED    =       -qfixed
 FORMAT_FREE     =       -qfree=f90
 FCSUFFIX        =       -qsuffix=f=f90
-BYTESWAPIO      =       
+BYTESWAPIO      =
 FCBASEOPTS_NO_G =       -w -qspill=20000 -qmaxmem=64000 $(FORMAT_FREE) $(BYTESWAPIO) #-qflttrap=zerodivide:invalid:enable -qsigtrap
 FCBASEOPTS      =       $(FCBASEOPTS_NO_G) $(FCDEBUG)
-MODULE_SRCH_FLAG =     
+MODULE_SRCH_FLAG =
 TRADFLAG        =       CONFIGURE_TRADFLAG
 # this might be different on different systems but we want the xlf version of cpp, not Linux's
 # surveyor.alcf.anl.gov
@@ -1463,7 +1463,7 @@ AR              =       ar
 ARFLAGS         =       ru
 M4              =       m4 -B 14000
 RANLIB          =       ranlib
-RLFLAGS		=	
+RLFLAGS		=
 CC_TOOLS        =       cc
 ###########################################################
 #ARCH    Linux ppc64 IBM Blade Server xlf compiler with xlc # dmpar
@@ -1486,20 +1486,20 @@ RWORDSIZE       =       CONFIGURE_RWORDSIZE
 PROMOTION       =        -qrealsize=$(RWORDSIZE) -qintsize=4
 # If system has even more processors, set VERY_LARGE_MAXPROC to that number
 ARCH_LOCAL      =       -DMOVE_NL_OUTSIDE_MODULE_CONFIGURE -DNONSTANDARD_SYSTEM_SUBR  -DVERY_LARGE_MAXPROC=36768  -DWRF_USE_CLM
-CFLAGS_LOCAL    =       -DNOUNDERSCORE 
-LDFLAGS_LOCAL   =       
+CFLAGS_LOCAL    =       -DNOUNDERSCORE
+LDFLAGS_LOCAL   =
 CPLUSPLUSLIB    =       -lC
 ESMF_LDFLAG     =       $(CPLUSPLUSLIB)
-FCOPTIM		=       -O3 -qtune=ppc970 -qarch=ppc970 
+FCOPTIM		=       -O3 -qtune=ppc970 -qarch=ppc970
 FCNOOPT		=       -qnoopt
 FCDEBUG         =       # -g $(FCNOOPT) -qfullpath
 FORMAT_FIXED    =       -qfixed
 FORMAT_FREE     =       -qfree=f90
 FCSUFFIX        =       -qsuffix=f=f90
-BYTESWAPIO      =       
+BYTESWAPIO      =
 FCBASEOPTS_NO_G =       -w -qspill=20000 -qmaxmem=32767 $(FORMAT_FREE) $(BYTESWAPIO) #-qflttrap=zerodivide:invalid:enable -qsigtrap
 FCBASEOPTS      =       $(FCBASEOPTS_NO_G) $(FCDEBUG)
-MODULE_SRCH_FLAG =     
+MODULE_SRCH_FLAG =
 TRADFLAG        =       CONFIGURE_TRADFLAG
 # this might be different on different systems but we want the xlf version of cpp, not Linux
 CPP             =       /opt/ibmcmp/xlf/11.1/exe/cpp CONFIGURE_CPPFLAGS
@@ -1507,7 +1507,7 @@ AR              =       ar
 ARFLAGS         =       ru
 M4              =       m4 -B 14000
 RANLIB          =       ranlib
-RLFLAGS		=	
+RLFLAGS		=
 CC_TOOLS        =       xlc -q64
 
 ###########################################################
@@ -1530,8 +1530,8 @@ RWORDSIZE       =       CONFIGURE_RWORDSIZE
 PROMOTION       =       -r$(RWORDSIZE) -i4
 ARCH_LOCAL      =       -DNONSTANDARD_SYSTEM_SUBR  -DWRF_USE_CLM
 CFLAGS_LOCAL    =       -w -O3
-LDFLAGS_LOCAL   =       
-CPLUSPLUSLIB    =       
+LDFLAGS_LOCAL   =
+CPLUSPLUSLIB    =
 ESMF_LDFLAG     =       $(CPLUSPLUSLIB)
 FCOPTIM         =       -O3 #-fastsse -Mvect=noaltcode -Msmartalloc -Mprefetch=distance:8 -Mfprelaxed # -Minfo=all =Mneginfo=all
 FCREDUCEDOPT	=       $(FCOPTIM)
@@ -1550,8 +1550,8 @@ AR              =      ar
 ARFLAGS         =      ru
 M4              =      m4 -B 14000
 RANLIB          =      ranlib
-RLFLAGS		=	
-CC_TOOLS        =      $(SCC) 
+RLFLAGS		=
+CC_TOOLS        =      $(SCC)
 
 ###########################################################
 #ARCH    CYGWIN_NT i686, PGI compiler on Windows # serial smpar dmpar dm+sm
@@ -1572,18 +1572,18 @@ LD              =       $(FC)
 RWORDSIZE       =       CONFIGURE_RWORDSIZE
 PROMOTION       =       -r$(RWORDSIZE) -i4
 ARCH_LOCAL      =       -DNONSTANDARD_SYSTEM_SUBR -D_WIN32  -DWRF_USE_CLM
-CFLAGS_LOCAL    =       -w -O3 -DMEMCPY_FOR_BCOPY 
+CFLAGS_LOCAL    =       -w -O3 -DMEMCPY_FOR_BCOPY
 LDFLAGS_LOCAL   =       Ws2_32.lib # -lnetcdff
 CPLUSPLUSLIB    =
 ESMF_LDFLAG     =       $(CPLUSPLUSLIB)
-FCOPTIM         =       -fastsse -Mvect=noaltcode -Mprefetch=distance:8 -Mfprelaxed -tp core2-64 # -Minfo=all 
+FCOPTIM         =       -fastsse -Mvect=noaltcode -Mprefetch=distance:8 -Mfprelaxed -tp core2-64 # -Minfo=all
 FCREDUCEDOPT    =       $(FCOPTIM)
 FCNOOPT         =       -O0
 FCDEBUG         =       # -g $(FCNOOPT) # -C -Ktrap=fp
 FORMAT_FIXED    =       -Mfixed
 FORMAT_FREE     =       -Mfree
 FCSUFFIX        =
-BYTESWAPIO      =       -byteswapio 
+BYTESWAPIO      =       -byteswapio
 FCBASEOPTS_NO_G =       -w $(FORMAT_FREE) $(BYTESWAPIO)
 FCBASEOPTS      =       $(FCBASEOPTS_NO_G) $(FCDEBUG)
 MODULE_SRCH_FLAG=       -module $(WRF_SRC_ROOT_DIR)/main
@@ -1593,8 +1593,8 @@ AR              =       ar
 ARFLAGS         =       cr
 M4              =       NA
 RANLIB          =       ranlib
-RLFLAGS		=	
-CC_TOOLS        =       $(SCC) 
+RLFLAGS		=
+CC_TOOLS        =       $(SCC)
 
 LIB_EXTERNAL    = \
                      ../external/io_netcdf/libwrfio_nf.a CONFIGURE_NETCDF_PATH/lib/libnetcdf.lib \
@@ -1630,8 +1630,8 @@ RWORDSIZE       =       CONFIGURE_RWORDSIZE
 PROMOTION       =       -r$(RWORDSIZE) -i4
 ARCH_LOCAL      =       -DNONSTANDARD_SYSTEM_SUBR  -DWRF_USE_CLM
 CFLAGS_LOCAL    =       -w -O3
-LDFLAGS_LOCAL   =       
-CPLUSPLUSLIB    =       
+LDFLAGS_LOCAL   =
+CPLUSPLUSLIB    =
 ESMF_LDFLAG     =       $(CPLUSPLUSLIB)
 FCOPTIM         =       -O3 #-fastsse -Mvect=noaltcode -Msmartalloc -Mprefetch=distance:8 -Mfprelaxed # -Minfo=all =Mneginfo=all
 FCREDUCEDOPT    =       $(FCOPTIM)
@@ -1650,8 +1650,8 @@ AR              =      ar
 ARFLAGS         =      ru
 M4              =      m4 -B 14000
 RANLIB          =      ranlib
-RLFLAGS		=	
-CC_TOOLS        =      $(SCC) 
+RLFLAGS		=
+CC_TOOLS        =      $(SCC)
 
 ###########################################################
 #ARCH    Darwin (MACOS) PGI compiler with pgcc -f90= #serial smpar dmpar dm+sm
@@ -1673,8 +1673,8 @@ RWORDSIZE       =       CONFIGURE_RWORDSIZE
 PROMOTION       =       -r$(RWORDSIZE) -i4
 ARCH_LOCAL      =       -DMACOS -DNONSTANDARD_SYSTEM_SUBR  -DWRF_USE_CLM
 CFLAGS_LOCAL    =       -DMACOS
-LDFLAGS_LOCAL   =       
-CPLUSPLUSLIB    =       
+LDFLAGS_LOCAL   =
+CPLUSPLUSLIB    =
 ESMF_LDFLAG     =       $(CPLUSPLUSLIB)
 FCOPTIM		=       -O2 -fast
 FCREDUCEDOPT	=       $(FCOPTIM)
@@ -1682,7 +1682,7 @@ FCNOOPT		=       -O0
 FCDEBUG         =       # -g $(FCNOOPT) # -C -Ktrap=fp -traceback
 FORMAT_FIXED    =       -Mfixed
 FORMAT_FREE     =       -Mfree
-FCSUFFIX        =       
+FCSUFFIX        =
 BYTESWAPIO      =       -byteswapio
 FCBASEOPTS_NO_G =       -w $(FORMAT_FREE) $(BYTESWAPIO) $(OMP)
 FCBASEOPTS      =       $(FCBASEOPTS_NO_G) $(FCDEBUG) -Mnomod
@@ -1718,7 +1718,7 @@ ARCH_LOCAL      =       -DMACOS -DNONSTANDARD_SYSTEM_FUNC  -DWRF_USE_CLM
 CFLAGS_LOCAL    =       -w -O3 -ip -DMACOS #-xHost -fp-model fast=2 -no-prec-div -no-prec-sqrt -ftz -no-multibyte-chars -DMACOS
 # increase stack size; also note that for OpenMP, set environment OMP_STACKSIZE 4G or greater
 LDFLAGS_LOCAL   =       -ip -Wl,-stack_addr,0xF10000000 -Wl,-stack_size,0x64000000 #-xHost -fp-model fast=2 -no-prec-div -no-prec-sqrt -ftz -align all -fno-alias -fno-common
-CPLUSPLUSLIB    =       
+CPLUSPLUSLIB    =
 ESMF_LDFLAG     =       $(CPLUSPLUSLIB)
 FCOPTIM         =       -O3
 FCREDUCEDOPT	=       $(FCOPTIM)
@@ -1763,7 +1763,7 @@ PROMOTION       =       #-fdefault-real-8
 ARCH_LOCAL      =       -DNONSTANDARD_SYSTEM_SUBR -DMACOS  -DWRF_USE_CLM
 CFLAGS_LOCAL    =       -w -O3 -c  -DMACOS
 LDFLAGS_LOCAL   =
-CPLUSPLUSLIB    =       
+CPLUSPLUSLIB    =
 ESMF_LDFLAG     =       $(CPLUSPLUSLIB)
 FCOPTIM         =       -O2 -ftree-vectorize -funroll-loops
 FCREDUCEDOPT	=       $(FCOPTIM)
@@ -1771,7 +1771,7 @@ FCNOOPT         =       -O0
 FCDEBUG         =       # -g $(FCNOOPT) # -fbacktrace -ggdb -fcheck=bounds,do,mem,pointer -ffpe-trap=invalid,zero,overflow
 FORMAT_FIXED    =       -ffixed-form
 FORMAT_FREE     =       -ffree-form -ffree-line-length-none
-FCSUFFIX        =       
+FCSUFFIX        =
 BYTESWAPIO      =       -fconvert=big-endian -frecord-marker=4
 FCBASEOPTS_NO_G =       -w $(FORMAT_FREE) $(BYTESWAPIO)
 FCBASEOPTS      =       $(FCBASEOPTS_NO_G) $(FCDEBUG)
@@ -1783,7 +1783,7 @@ ARFLAGS         =      ru
 M4              =      m4 -B 14000
 RANLIB          =      ranlib
 RLFLAGS		=	-c
-CC_TOOLS        =      $(SCC) 
+CC_TOOLS        =      $(SCC)
 
 ###########################################################
 #ARCH    Linux x86_64 ppc64le i486 i586 i686, PGI compiler with pgcc -f90= # serial smpar dmpar dm+sm
@@ -1805,8 +1805,8 @@ RWORDSIZE       =       CONFIGURE_RWORDSIZE
 PROMOTION       =       -r$(RWORDSIZE) -i4
 ARCH_LOCAL      =       -DNONSTANDARD_SYSTEM_SUBR  -DWRF_USE_CLM
 CFLAGS_LOCAL    =       -w -O3
-LDFLAGS_LOCAL   =       
-CPLUSPLUSLIB    =       
+LDFLAGS_LOCAL   =
+CPLUSPLUSLIB    =
 ESMF_LDFLAG     =       $(CPLUSPLUSLIB)
 FCOPTIM         =       -O3 #-fastsse -Mvect=noaltcode -Msmartalloc -Mprefetch=distance:8 -Mfprelaxed # -Minfo=all =Mneginfo=all
 FCREDUCEDOPT	=       $(FCOPTIM)
@@ -1825,8 +1825,8 @@ AR              =      ar
 ARFLAGS         =      ru
 M4              =      m4 -B 14000
 RANLIB          =      ranlib
-RLFLAGS		=	
-CC_TOOLS        =      $(SCC) 
+RLFLAGS		=
+CC_TOOLS        =      $(SCC)
 
 ###########################################################
 #ARCH    Linux x86_64 ppc64le i486 i586 i686 #serial smpar dmpar dm+sm
@@ -1849,7 +1849,7 @@ PROMOTION       =       -real-size `expr 8 \* $(RWORDSIZE)` -i4
 ARCH_LOCAL      =       -DNONSTANDARD_SYSTEM_FUNC -DWRF_USE_CLM
 CFLAGS_LOCAL    =       -w -O3 -ip -xHost -fp-model fast=2 -no-prec-div -no-prec-sqrt -ftz -no-multibyte-chars -xCORE-AVX2
 LDFLAGS_LOCAL   =       -ip -xHost -fp-model fast=2 -no-prec-div -no-prec-sqrt -ftz -align all -fno-alias -fno-common -xCORE-AVX2
-CPLUSPLUSLIB    =       
+CPLUSPLUSLIB    =
 ESMF_LDFLAG     =       $(CPLUSPLUSLIB)
 FCOPTIM         =       -O3
 FCREDUCEDOPT	=       $(FCOPTIM)
@@ -1862,15 +1862,15 @@ BYTESWAPIO      =       -convert big_endian
 RECORDLENGTH    =       -assume byterecl
 FCBASEOPTS_NO_G =       -ip -fp-model precise -w -ftz -align all -fno-alias $(FORMAT_FREE) $(BYTESWAPIO) -xHost -fp-model fast=2 -no-heap-arrays -no-prec-div -no-prec-sqrt -fno-common -xCORE-AVX2
 FCBASEOPTS      =       $(FCBASEOPTS_NO_G) $(FCDEBUG)
-MODULE_SRCH_FLAG =     
+MODULE_SRCH_FLAG =
 TRADFLAG        =      CONFIGURE_TRADFLAG
 CPP             =      /lib/cpp CONFIGURE_CPPFLAGS
 AR              =      ar
 ARFLAGS         =      ru
 M4              =      m4
 RANLIB          =      ranlib
-RLFLAGS		=	
-CC_TOOLS        =      $(SCC) 
+RLFLAGS		=
+CC_TOOLS        =      $(SCC)
 
 ###########################################################
 #ARCH    Linux KNL x86_64 ppc64le i486 i586 i686 #serial smpar dmpar dm+sm
@@ -1893,7 +1893,7 @@ PROMOTION       =       -real-size `expr 8 \* $(RWORDSIZE)` -i4
 ARCH_LOCAL      =       -DNONSTANDARD_SYSTEM_FUNC -DWRF_USE_CLM
 CFLAGS_LOCAL    =       -w -O3 -ip -xHost -fp-model fast=2 -no-prec-div -no-prec-sqrt -ftz -no-multibyte-chars -xMIC-AVX512
 LDFLAGS_LOCAL   =       -ip -xHost -fp-model fast=2 -no-prec-div -no-prec-sqrt -ftz -align all -fno-alias -fno-common -xMIC-AVX512
-CPLUSPLUSLIB    =       
+CPLUSPLUSLIB    =
 ESMF_LDFLAG     =       $(CPLUSPLUSLIB)
 FCOPTIM         =       -O3
 FCREDUCEDOPT	=       $(FCOPTIM)
@@ -1906,15 +1906,15 @@ BYTESWAPIO      =       -convert big_endian
 RECORDLENGTH    =       -assume byterecl
 FCBASEOPTS_NO_G =       -ip -fp-model precise -w -ftz -align all -fno-alias $(FORMAT_FREE) $(BYTESWAPIO) -xHost -fp-model fast=2 -no-heap-arrays -no-prec-div -no-prec-sqrt -fno-common -xMIC-AVX512
 FCBASEOPTS      =       $(FCBASEOPTS_NO_G) $(FCDEBUG)
-MODULE_SRCH_FLAG =     
+MODULE_SRCH_FLAG =
 TRADFLAG        =      CONFIGURE_TRADFLAG
 CPP             =      /lib/cpp CONFIGURE_CPPFLAGS
 AR              =      ar
 ARFLAGS         =      ru
 M4              =      m4
 RANLIB          =      ranlib
-RLFLAGS		=	
-CC_TOOLS        =      $(SCC) 
+RLFLAGS		=
+CC_TOOLS        =      $(SCC)
 
 #insert new stanza here
 
-- 
1.8.3.1

