From 1462dea2ad94396d4a1af5f48753c243c33b9d02 Mon Sep 17 00:00:00 2001
From: Brad Geltz <brad.geltz@intel.com>
Date: Wed, 5 Aug 2020 15:18:29 -0700
Subject: [PATCH 6/8] Add Epoch markup
#
#  Copyright (c) 2015 - 2021, Intel Corporation
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions
#  are met:
#
#      * Redistributions of source code must retain the above copyright
#        notice, this list of conditions and the following disclaimer.
#
#      * Redistributions in binary form must reproduce the above copyright
#        notice, this list of conditions and the following disclaimer in
#        the documentation and/or other materials provided with the
#        distribution.
#
#      * Neither the name of Intel Corporation nor the names of its
#        contributors may be used to endorse or promote products derived
#        from this software without specific prior written permission.
#
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
#  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
#  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
#  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
#  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
#  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
#  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
#  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY LOG OF THE USE
#  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

- Only time the second invocation of cg().

Signed-off-by: Brad Geltz <brad.geltz@intel.com>
---
 src/cg.f     | 14 ++++++++++++++
 src/driver.f |  8 ++++++++
 2 files changed, 22 insertions(+)

diff --git a/src/cg.f b/src/cg.f
index f9c4f6d..1e79d3b 100644
--- a/src/cg.f
+++ b/src/cg.f
@@ -10,7 +10,12 @@
 
 
 c-----------------------------------------------------------------------
+#ifndef GEOPM
       subroutine cg(x,f,g,c,r,w,p,z,n,niter,flop_cg)
+#else
+      subroutine cg(x,f,g,c,r,w,p,z,n,niter,flop_cg,do_geopm)
+      use geopm
+#endif
 
 #if defined(XSMM_DISPATCH)
       USE :: LIBXSMM
@@ -47,6 +52,10 @@ c     real ur(lxyz),us(lxyz),ut(lxyz),wk(lxyz)
       integer thread, numth, find, lind, fel, lel
       integer omp_get_thread_num, omp_get_num_threads
       integer fiter, tmt
+#ifdef GEOPM
+      integer ierr
+      logical do_geopm
+#endif
 
       pap = 0.0
 
@@ -103,6 +112,11 @@ c$OMP&  fel,lel,rtz2,beta,alpha,alphm,rlim2,rtr0,tmt,ttemp1)
 
 
       do iter=1,miter
+#ifdef GEOPM
+         if (thread == 0 .AND. do_geopm) then
+             ierr = geopm_prof_epoch()
+         endif
+#endif
 #ifdef LOG
          if ((nid.eq.0) .and. (thread.eq.0)) write(*,*) "iter = ", iter
 #endif
diff --git a/src/driver.f b/src/driver.f
index cb4421f..4f2a224 100644
--- a/src/driver.f
+++ b/src/driver.f
@@ -79,7 +79,11 @@ c     SET UP and RUN NEKBONE
            WLOG("calling set_f")
            call set_f(f,c,n)
            WLOG("calling cg")
+#ifndef GEOPM
            call cg(x,f,g,c,r,w,p,z,n,niter,flop_cg)
+#else
+           call cg(x,f,g,c,r,w,p,z,n,niter,flop_cg,.FALSE.)
+#endif
 
            WLOG("calling nekgsync")
            call nekgsync()
@@ -87,7 +91,11 @@ c     SET UP and RUN NEKBONE
            WLOG("calling set_timer_flop_count")
            call set_timer_flop_cnt(0)
            WLOG("calling cg")
+#ifndef GEOPM
            call cg(x,f,g,c,r,w,p,z,n,niter,flop_cg)
+#else
+           call cg(x,f,g,c,r,w,p,z,n,niter,flop_cg,.TRUE.)
+#endif
            WLOG("calling set_timer_flop_count")
            call set_timer_flop_cnt(1)
 
-- 
2.23.0

