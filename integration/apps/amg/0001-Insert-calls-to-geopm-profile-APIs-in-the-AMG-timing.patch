From ad6c399fd677b7a328261adb8fe69026562662a4 Mon Sep 17 00:00:00 2001
From: Lowren Lawson <lowren.h.lawson@intel.com>
Date: Wed, 4 May 2022 14:54:41 -0700
Subject: [PATCH] Insert calls to geopm profile APIs in the AMG timing.c

#  Copyright (c) 2015 - 2022, Intel Corporation
#  SPDX-License-Identifier: BSD-3-Clause
#

Signed-off-by: Lowren Lawson <lowren.h.lawson@intel.com>
---
 Makefile.include   |  6 +++++-
 krylov/pcg.c       |  8 ++++++++
 utilities/timing.c | 22 ++++++++++++++++++++++
 3 files changed, 35 insertions(+), 1 deletion(-)

diff --git a/Makefile.include b/Makefile.include
index b73ccce..1397d5b 100644
--- a/Makefile.include
+++ b/Makefile.include
@@ -23,7 +23,7 @@
 
 # set the compiler here
 #CC = gcc
-CC = mpicc
+CC = ${MPICC}
 #CC = mpixlc_r
 
 # set compile flags here
@@ -51,3 +51,7 @@ INCLUDE_CFLAGS = -O2 -DTIMER_USE_MPI -DHYPRE_USING_OPENMP -fopenmp -DHYPRE_HOPSC
 INCLUDE_LFLAGS = -lm -fopenmp
 #INCLUDE_LFLAGS = -lm 
 
+# Add CFLAGS for geopm
+GEOPM_INSTALL ?= $(HOME)/build/geopm
+INCLUDE_CFLAGS += -xCORE-AVX2 $(GEOPM_CFLAGS) -DGEOPM
+INCLUDE_LFLAGS += $(GEOPM_LDFLAGS) $(GEOPM_LDLIBS)
diff --git a/krylov/pcg.c b/krylov/pcg.c
index 2492dae..562baed 100644
--- a/krylov/pcg.c
+++ b/krylov/pcg.c
@@ -32,6 +32,10 @@
 
 #include "krylov.h"
 #include "_hypre_utilities.h"
+#ifdef GEOPM
+#include <geopm_prof.h>
+#include <geopm_hint.h>
+#endif
 
 /*--------------------------------------------------------------------------
  * hypre_PCGFunctionsCreate
@@ -478,6 +482,10 @@ hypre_PCGSolve( void *pcg_vdata,
 
    while ((i+1) <= max_iter)
    {
+#ifdef GEOPM
+       geopm_prof_epoch();
+#endif
+
       /*--------------------------------------------------------------------
        * the core CG calculations...
        *--------------------------------------------------------------------*/
diff --git a/utilities/timing.c b/utilities/timing.c
index 2ada3e4..e080230 100644
--- a/utilities/timing.c
+++ b/utilities/timing.c
@@ -25,6 +25,10 @@
 #define HYPRE_TIMING_GLOBALS
 #include "_hypre_utilities.h"
 #include "timing.h"
+#ifdef GEOPM
+#include "geopm_prof.h"
+#include <geopm_hint.h>
+#endif
 
 /*-------------------------------------------------------
  * Timing macros
@@ -40,6 +44,11 @@ hypre_TimingCPUCount += time_getCPUSeconds()
 
 #define hypre_global_timing_ref(index,field) hypre_global_timing->field
 
+#ifdef GEOPM
+#define GEOPM_TIME_INDEX_MAX 512
+uint64_t g_geopm_rid[GEOPM_TIME_INDEX_MAX] = {};
+#endif
+
 /*--------------------------------------------------------------------------
  * hypre_InitializeTiming
  *--------------------------------------------------------------------------*/
@@ -153,6 +162,13 @@ hypre_InitializeTiming( const char *name )
       (hypre_global_timing_ref(threadid, num_names)) ++;
    }
 
+#ifdef GEOPM
+   if (time_index < GEOPM_TIME_INDEX_MAX) {
+       geopm_prof_region(name, GEOPM_REGION_HINT_UNKNOWN, g_geopm_rid + time_index);
+       geopm_prof_enter(g_geopm_rid[time_index]);
+   }
+#endif
+
    return time_index;
 }
 
@@ -199,6 +215,12 @@ hypre_FinalizeTiming( HYPRE_Int time_index )
       hypre_global_timing = NULL;
    }
 
+#ifdef GEOPM
+   if (time_index < GEOPM_TIME_INDEX_MAX) {
+       ierr = geopm_prof_exit(g_geopm_rid[time_index]);
+   }
+#endif
+
    return ierr;
 }
 
-- 
2.26.2

