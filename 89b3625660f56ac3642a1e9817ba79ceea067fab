{
  "comments": [
    {
      "key": {
        "uuid": "aef88793_9ed7e9f2",
        "filename": "src/ControlMessage.cpp",
        "patchSetId": 15
      },
      "lineNbr": 49,
      "author": {
        "id": 1002495
      },
      "writtenOn": "2019-04-12T20:41:29Z",
      "side": 1,
      "message": "Can we make this new parameter the last parameter, rather than the first?",
      "range": {
        "startLine": 49,
        "startChar": 41,
        "endLine": 49,
        "endChar": 57
      },
      "revId": "89b3625660f56ac3642a1e9817ba79ceea067fab",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d0f2e009_828e1645",
        "filename": "src/Environment.cpp",
        "patchSetId": 15
      },
      "lineNbr": 264,
      "author": {
        "id": 1002495
      },
      "writtenOn": "2019-04-12T20:41:29Z",
      "side": 1,
      "message": "do todo.",
      "range": {
        "startLine": 264,
        "startChar": 13,
        "endLine": 264,
        "endChar": 42
      },
      "revId": "89b3625660f56ac3642a1e9817ba79ceea067fab",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fbbd53d6_ac41055a",
        "filename": "src/Environment.cpp",
        "patchSetId": 15
      },
      "lineNbr": 268,
      "author": {
        "id": 1002495
      },
      "writtenOn": "2019-04-12T20:41:29Z",
      "side": 1,
      "message": "set err in the catch section. Also, why not make err an int not a long?  Same applies below.",
      "revId": "89b3625660f56ac3642a1e9817ba79ceea067fab",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3e84a6b4_ee767435",
        "filename": "src/Exception.cpp",
        "patchSetId": 15
      },
      "lineNbr": 114,
      "author": {
        "id": 1002495
      },
      "writtenOn": "2019-04-12T20:41:29Z",
      "side": 1,
      "message": "This call may throw.  We need a C wrapper for geopm::environment().shmkey() as well.  Calling c_str() on key_base will not throw in C++11, but kind of rather just have the c wrapper return a const char * pointing to the singleton c_str().",
      "revId": "89b3625660f56ac3642a1e9817ba79ceea067fab",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c3920b1d_38b9205a",
        "filename": "src/Tracer.cpp",
        "patchSetId": 15
      },
      "lineNbr": 60,
      "author": {
        "id": 1002495
      },
      "writtenOn": "2019-04-12T20:41:29Z",
      "side": 1,
      "message": "environment.do_trace()?",
      "range": {
        "startLine": 60,
        "startChar": 45,
        "endLine": 60,
        "endChar": 66
      },
      "revId": "89b3625660f56ac3642a1e9817ba79ceea067fab",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "16df8622_15b527ff",
        "filename": "src/geopm_pmpi.c",
        "patchSetId": 15
      },
      "lineNbr": 148,
      "author": {
        "id": 1002495
      },
      "writtenOn": "2019-04-12T20:41:29Z",
      "side": 1,
      "message": "can we move this declaration inside of the other ifdef (just for clean up).",
      "range": {
        "startLine": 146,
        "startChar": 0,
        "endLine": 148,
        "endChar": 6
      },
      "revId": "89b3625660f56ac3642a1e9817ba79ceea067fab",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7695c02a_da3e964a",
        "filename": "test/EnvironmentTest.cpp",
        "patchSetId": 15
      },
      "lineNbr": 150,
      "author": {
        "id": 1002495
      },
      "writtenOn": "2019-04-12T20:41:29Z",
      "side": 1,
      "message": "Why is this code commented?",
      "range": {
        "startLine": 142,
        "startChar": 0,
        "endLine": 150,
        "endChar": 48
      },
      "revId": "89b3625660f56ac3642a1e9817ba79ceea067fab",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0fb760f2_c110897a",
        "filename": "test/EnvironmentTest.cpp",
        "patchSetId": 15
      },
      "lineNbr": 150,
      "author": {
        "id": 1002495
      },
      "writtenOn": "2019-04-12T21:53:48Z",
      "side": 1,
      "message": "Can we not replace geopm_env_ with geopm::environment() and leave the tests?",
      "parentUuid": "7695c02a_da3e964a",
      "range": {
        "startLine": 142,
        "startChar": 0,
        "endLine": 150,
        "endChar": 48
      },
      "revId": "89b3625660f56ac3642a1e9817ba79ceea067fab",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "077f7954_7f8718ee",
        "filename": "test/EnvironmentTest.cpp",
        "patchSetId": 15
      },
      "lineNbr": 194,
      "author": {
        "id": 1002495
      },
      "writtenOn": "2019-04-12T20:41:29Z",
      "side": 1,
      "message": "why is this code commented.",
      "range": {
        "startLine": 184,
        "startChar": 0,
        "endLine": 194,
        "endChar": 62
      },
      "revId": "89b3625660f56ac3642a1e9817ba79ceea067fab",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "20b154dc_a489f658",
        "filename": "test/SharedMemoryTest.cpp",
        "patchSetId": 15
      },
      "lineNbr": 60,
      "author": {
        "id": 1002495
      },
      "writtenOn": "2019-04-12T20:41:29Z",
      "side": 1,
      "message": "?",
      "range": {
        "startLine": 60,
        "startChar": 28,
        "endLine": 60,
        "endChar": 31
      },
      "revId": "89b3625660f56ac3642a1e9817ba79ceea067fab",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    }
  ]
}