From c089dbbac9267b2cd5459f593136c43805e94d1d Mon Sep 17 00:00:00 2001
From: Brad Geltz <brad.geltz@intel.com>
Date: Fri, 11 May 2018 18:10:18 -0700
Subject: [PATCH 2/3] Marked up nekbone code for use with GEOPM.

#  Copyright (c) 2015, 2016, 2017, 2018, Intel Corporation
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions
#  are met:
#
#      * Redistributions of source code must retain the above copyright
#        notice, this list of conditions and the following disclaimer.
#
#      * Redistributions in binary form must reproduce the above copyright
#        notice, this list of conditions and the following disclaimer in
#        the documentation and/or other materials provided with the
#        distribution.
#
#      * Neither the name of Intel Corporation nor the names of its
#        contributors may be used to endorse or promote products derived
#        from this software without specific prior written permission.
#
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
#  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
#  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
#  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
#  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
#  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
#  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
#  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY LOG OF THE USE
#  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

Signed-off-by: Brad Geltz <brad.geltz@intel.com>
---
 src/cg.f               | 138 +++++++++++++++++++++++++++++++++++++++++++++++++
 src/comm_mpi.f         |   8 +--
 src/driver.f           |  20 ++++++-
 test/example1/SIZE     |   5 +-
 test/example1/data.rea |  10 ++--
 test/example1/makenek  |  64 ++++++-----------------
 6 files changed, 182 insertions(+), 63 deletions(-)

diff --git a/src/cg.f b/src/cg.f
index 5a8e6e2..5dc4820 100644
--- a/src/cg.f
+++ b/src/cg.f
@@ -13,6 +13,11 @@
 
 c-----------------------------------------------------------------------
       subroutine cg(x,f,g,c,r,w,p,z,n,niter,flop_cg)
+
+#ifdef GEOPM
+      use geopm
+#endif
+
       include 'SIZE'
       include 'TIMER'
 
@@ -42,6 +47,10 @@ c     real ur(lxyz),us(lxyz),ut(lxyz),wk(lxyz)
       integer thread, numth, find, lind, fel, lel
       integer omp_get_thread_num, omp_get_num_threads
       integer fiter, tmt
+#ifdef GEOPM
+      integer(8) region_id
+      integer ierr
+#endif
 
       pap = 0.0
 
@@ -55,6 +64,9 @@ c     set machine tolerances
       miter = niter
 
 c$OMP PARALLEL DEFAULT(shared) PRIVATE(thread,numth,find,lind,iter,
+#ifdef GEOPM
+c$OMP&  region_id,ierr,
+#endif
 c$OMP&  fel,lel,rtz2,beta,alpha,alphm,rlim2,rtr0)
 
       thread = 0
@@ -94,41 +106,120 @@ c$OMP&  fel,lel,rtz2,beta,alpha,alphm,rlim2,rtr0)
 
 
       do iter=1,miter
+#ifdef GEOPM
+         if (thread == 0) then
+             ierr = geopm_prof_epoch()
+             ierr = geopm_prof_region(
+     $              c_char_'REGION_4'//c_null_char,
+     $              GEOPM_REGION_HINT_UNKNOWN, region_id)
+             ierr = geopm_prof_enter(region_id)
+         endif
+#endif
          NBTIMER(ttemp1)
          call solveMi(z,r,n,find,lind)    ! preconditioner here
          ACCUMTIMER(tzc(tmt), ttemp1)
+#ifdef GEOPM
+         if (thread == 0) then
+            ierr = geopm_prof_exit(region_id)
+         endif
+#endif
 
+#ifdef GEOPM
+         if (thread == 0) then
+             ierr = geopm_prof_region(
+     $              c_char_'REGION_5a'//c_null_char,
+     $              GEOPM_REGION_HINT_UNKNOWN, region_id)
+             ierr = geopm_prof_enter(region_id)
+         endif
+#endif
          rtz2=rtz1                                                       ! OPS
          NBTIMER(ttemp1)
          call glsc3i(rtz1,r,c,z,n,find,lind)
          ACCUMTIMER(tglsc3(tmt), ttemp1)
+#ifdef GEOPM
+         if (thread == 0) then
+            ierr = geopm_prof_exit(region_id)
+         endif
+#endif
 
          beta = rtz1/rtz2
          if (iter.eq.1) beta=0.0
 
+#ifdef GEOPM
+         if (thread == 0) then
+             ierr = geopm_prof_region(
+     $              c_char_'REGION_6'//c_null_char,
+     $              GEOPM_REGION_HINT_UNKNOWN, region_id)
+             ierr = geopm_prof_enter(region_id)
+         endif
+#endif
          NBTIMER(ttemp1)
          call add2s1i(p,z,beta,n,find,lind)                              ! 2n
          ACCUMTIMER(tadd2sx(tmt), ttemp1)
+#ifdef GEOPM
+         if (thread == 0) then
+            ierr = geopm_prof_exit(region_id)
+         endif
+#endif
 
          NBTIMER(ttemp1)
          call axi(w,p,g,n,fel,lel,find,lind)                             ! flopa
          ACCUMTIMER(tax(tmt), ttemp1)
 
+#ifdef GEOPM
+         if (thread == 0) then
+             ierr = geopm_prof_region(
+     $              c_char_'REGION_5b'//c_null_char,
+     $              GEOPM_REGION_HINT_UNKNOWN, region_id)
+             ierr = geopm_prof_enter(region_id)
+         endif
+#endif
          NBTIMER(ttemp1)
          call glsc3i(pap, w,c,p,n,find,lind)                             ! 3n
          ACCUMTIMER(tglsc3(tmt), ttemp1)
+#ifdef GEOPM
+         if (thread == 0) then
+            ierr = geopm_prof_exit(region_id)
+         endif
+#endif
 
          alpha=rtz1/pap
          alphm=-alpha
 
+#ifdef GEOPM
+         if (thread == 0) then
+             ierr = geopm_prof_region(
+     $              c_char_'REGION_8a'//c_null_char,
+     $              GEOPM_REGION_HINT_UNKNOWN, region_id)
+             ierr = geopm_prof_enter(region_id)
+         endif
+#endif
          NBTIMER(ttemp1)
          call add2s2i(x,p,alpha,n,find,lind)                             ! 2n
          call add2s2i(r,w,alphm,n,find,lind)                             ! 2n
          ACCUMTIMER(tadd2sx(tmt), ttemp1)
+#ifdef GEOPM
+         if (thread == 0) then
+            ierr = geopm_prof_exit(region_id)
+         endif
+#endif
 
+#ifdef GEOPM
+         if (thread == 0) then
+             ierr = geopm_prof_region(
+     $              c_char_'REGION_5c'//c_null_char,
+     $              GEOPM_REGION_HINT_UNKNOWN, region_id)
+             ierr = geopm_prof_enter(region_id)
+         endif
+#endif
          NBTIMER(ttemp1)
          call  glsc3i(rtr, r,c,r,n,find,lind)                            ! 3n
          ACCUMTIMER(tglsc3(tmt), ttemp1)
+#ifdef GEOPM
+         if (thread == 0) then
+            ierr = geopm_prof_exit(region_id)
+         endif
+#endif
 
          if (iter.eq.1) rlim2 = rtr*eps**2
          if (iter.eq.1) rtr0  = rtr
@@ -168,6 +259,10 @@ c-----------------------------------------------------------------------
 c-----------------------------------------------------------------------
       subroutine axi(w,u,gxyz,n,fel,lel,find,lind) ! Matrix-vector product: w=A*u
 
+#ifdef GEOPM
+      use geopm
+#endif
+
       include 'SIZE'
       include 'TOTAL'
       include 'TIMER'
@@ -183,6 +278,10 @@ c-----------------------------------------------------------------------
 
       integer fel, lel, find, lind
       integer e,thread, tmt, omp_get_thread_num
+#ifdef GEOPM
+      integer(8) region_id
+      integer ierr
+#endif
 
       thread = 0
 #ifdef _OPENMP
@@ -190,19 +289,58 @@ c-----------------------------------------------------------------------
 #endif
       tmt = thread + 1
 
+#ifdef GEOPM
+      if (thread == 0) then
+          ierr = geopm_prof_region(
+     $           c_char_'REGION_7a'//c_null_char,
+     $           GEOPM_REGION_HINT_UNKNOWN, region_id)
+          ierr = geopm_prof_enter(region_id)
+      endif
+#endif
       NBTIMER(ttemp2)
       do e= fel, lel
          call ax_e( w(1,e),u(1,e),gxyz(1,1,e))
       enddo
       ACCUMTIMER(taxe(tmt),ttemp2)
+#ifdef GEOPM
+      if (thread == 0) then
+         ierr = geopm_prof_exit(region_id)
+      endif
+#endif
 
+#ifdef GEOPM
+      if (thread == 0) then
+          ierr = geopm_prof_region(
+     $           c_char_'REGION_7b'//c_null_char,
+     $           GEOPM_REGION_HINT_UNKNOWN, region_id)
+          ierr = geopm_prof_enter(region_id)
+      endif
+#endif
       NBTIMER(ttemp2)
       call gs_op(gsh,w,1,1,0)  ! Gather-scatter operation  ! w   = QQ  w
       ACCUMTIMER(tgsop(tmt),ttemp2)
+#ifdef GEOPM
+      if (thread == 0) then
+         ierr = geopm_prof_exit(region_id)
+      endif
+#endif
                                                            !            L
+#ifdef GEOPM
+      if (thread == 0) then
+          ierr = geopm_prof_region(
+     $           c_char_'REGION_8b'//c_null_char,
+     $           GEOPM_REGION_HINT_UNKNOWN, region_id)
+          ierr = geopm_prof_enter(region_id)
+      endif
+#endif
       NBTIMER(ttemp2)
       call add2s2i(w,u,.1,n,find,lind)
       ACCUMTIMER(tadd2s2(tmt),ttemp2)
+#ifdef GEOPM
+      if (thread == 0) then
+         ierr = geopm_prof_exit(region_id)
+      endif
+#endif
 
       if (find == 1) then
         call mask(w)             ! Zero out Dirichlet conditions
diff --git a/src/comm_mpi.f b/src/comm_mpi.f
index a959a17..7792e55 100644
--- a/src/comm_mpi.f
+++ b/src/comm_mpi.f
@@ -28,10 +28,10 @@ c-----------------------------------------------------------------------
 
       ! check upper tag size limit
       call mpi_attr_get(MPI_COMM_WORLD,MPI_TAG_UB,nval,flag,ierr)
-      if (nval.lt.(10000+max(lp,lelg))) then
-         if(nid.eq.0) write(6,*) 'ABORT: MPI_TAG_UB too small!'
-         call exitt
-      endif
+      ! if (nval.lt.(10000+max(lp,lelg))) then
+      !    if(nid.eq.0) write(6,*) 'ABORT: MPI_TAG_UB too small!'
+      !    call exitt
+      ! endif
 
       IF (NP.GT.LP) THEN
          WRITE(6,*) 
diff --git a/src/driver.f b/src/driver.f
index 3341bd0..76b5493 100644
--- a/src/driver.f
+++ b/src/driver.f
@@ -1,7 +1,11 @@
 #define ITL_SAVE 1
 c-----------------------------------------------------------------------
       program nekbone
-      
+
+#ifdef GEOPM
+      use geopm
+#endif
+
       include 'SIZE'
       include 'TOTAL'
       include 'mpif.h'
@@ -28,13 +32,16 @@ c-----------------------------------------------------------------------
       integer npx,npy,npz      ! poly. order range
       integer mx,my,mz         ! poly. order range
       integer numthreads, omp_get_max_threads
+#ifdef GEOPM
+      integer(8) region_id
+      integer ierr
+#endif
 
 
       call iniproc(mpi_comm_world)    ! has nekmpi common block
       call read_param(ifbrick,iel0,ielN,ielD,nx0,nxN,nxD,
      +                npx,npy,npz,mx,my,mz)
 
-
       numthreads = 1
 #ifdef _OPENMP
       numthreads= omp_get_max_threads()
@@ -64,9 +71,18 @@ c     SET UP and RUN NEKBONE
            n     = nx1*ny1*nz1*nelt
 
            call set_f(f,c,n)
+#ifdef GEOPM
+           ierr = geopm_prof_region(
+     $            c_char_'startup'//c_null_char,
+     $            GEOPM_REGION_HINT_IGNORE, region_id)
+           ierr = geopm_prof_enter(region_id)
+#endif
            call cg(x,f,g,c,r,w,p,z,n,niter,flop_cg)
 
            call nekgsync()
+#ifdef GEOPM
+           ierr = geopm_prof_exit(region_id)
+#endif
 
            call set_timer_flop_cnt(0)
            call cg(x,f,g,c,r,w,p,z,n,niter,flop_cg)
diff --git a/test/example1/SIZE b/test/example1/SIZE
index bc7ef7f..941aedc 100644
--- a/test/example1/SIZE
+++ b/test/example1/SIZE
@@ -3,9 +3,8 @@ C     Dimension file to be included
       parameter (ldim=3)                      ! dimension
       parameter (lx1=12,ly1=lx1,lz1=lx1)      ! polynomial order
 
-      parameter (lp = 61440)                 ! max number of processors
-c     parameter (lelt=4096 )                    ! max number of elements, per proc
-      parameter (lelt=8192 )                    ! max number of elements, per proc
+      parameter (lp =49152)                 ! max number of processors
+      parameter (lelt= 512)                    ! max number of elements, per proc
 
       parameter (lelg=lelt*lp)                ! max total elements in a test
       parameter (lelx=lelg,lely=1,lelz=1)     ! max elements in each direction
diff --git a/test/example1/data.rea b/test/example1/data.rea
index ae19c40..36077f4 100644
--- a/test/example1/data.rea
+++ b/test/example1/data.rea
@@ -1,5 +1,5 @@
-.true. = ifbrick               ! brick or linear geometry
-4096 4096  1  = iel0,ielN,ielD (per processor)  ! range of number of elements per proc.
- 9 12 3 = nx0,nxN,nxD         ! poly. order range for nx1
-48 40 32 = npx, npy, npz       ! processor distribution in x,y,z
-16 16 16 = mx, my, mz          ! local element distribution in x,y,z
+.true. = ifbrick               ! brick or linear geometry
+512 512 1  = iel0,ielN,ielD (per processor)  ! range of number of elements per proc.
+ 9  12 3 = nx0,nxN,nxD         ! poly. order range for nx1
+ 1  1  1 = npx, npy, npz       ! processor distribution in x,y,z
+ 1  1  1 = mx, my, mz          ! local element distribution in x,y,z
diff --git a/test/example1/makenek b/test/example1/makenek
index 60db3e7..143fc66 100755
--- a/test/example1/makenek
+++ b/test/example1/makenek
@@ -2,48 +2,20 @@
 # Nek5000 build config file
 # (c) 2008,2009,2010 UCHICAGO ARGONNE, LLC
 
-# source path 
-SOURCE_ROOT="../../src/"
+# source path
+SOURCE_ROOT="../../src"
+GEOPM_HOME="/projects/intel/geopm-home/$(whoami)/build/geopm"
 
 # Fortran compiler
-#F77="mpif77 -openmp"
-F77="mpiifort -qopenmp"
+F77="ftn -fpp -I${GEOPM_HOME}/lib/ftn/modules/geopm-x86_64/ -dynamic"
 
 # C compiler
-#CC="mpicc -openmp"
-CC="mpiicc -qopenmp"
+CC="cc -dynamic"
 
-# pre-processor symbol list 
+# pre-processor symbol list
 # (set PPLIST=? to get a list of available symbols)
-#PPLIST="TIMERS"
+PPLIST="TIMERS CGTTIMER"
 
-#TargetARCH=SNB
-TargetARCH=KNL
-#TargetARCH=KNLavxH31
-#TargetARCH=BDWavx2
-#TargetARCH=KNC
-
-if [ ${TargetARCH} == 'SNB' ]; then
-GFLAGS=-xAVX
-fi
-
-if [ ${TargetARCH} == 'KNC' ]; then
-GFLAGS=-mmic
-fi
-
-if [ ${TargetARCH} == 'KNL' ]; then
-GFLAGS=-xMIC-AVX512
-export MKL_DEBUG_CPU_TYPE=6
-fi
-
-if [ ${TargetARCH} == 'KNLavxH31' ]; then
-GFLAGS=-xBETA_H31
-export MKL_DEBUG_CPU_TYPE=6
-fi
-
-if [ ${TargetARCH} == 'BDWavx2' ]; then
-GFLAGS=-xCORE-AVX2
-fi
 
 # OPTIONAL SETTINGS
 # -----------------
@@ -53,26 +25,20 @@ fi
 
 # auxilliary files to compile
 # NOTE: source files have to located in the same directory as makenek
-#       a makefile_usr.inc has to be provided containing the build rules 
+#       a makefile_usr.inc has to be provided containing the build rules
 #USR="foo.o"
 
+OPT_INCDIR="-I${GEOPM_HOME}/include"
+
 # linking flags
-#USR_LFLAGS="-lhugetlbfs"
-#USR_LFLAGS="-L/usr/lib/ -lfoo"
+USR_LFLAGS="-qopenmp -L${GEOPM_HOME}/lib -lgeopm -lgeopmfort"
 
 # generic compiler flags
-#G="-g"
-#G="-g -debug inline-debug-info ${GFLAGS} -opt-report"
-#G="${GFLAGS} -opt-report"
-G="${GFLAGS} "
+G="-xMIC-AVX512 -DGEOPM ${OPT_INC_DIR}"
 
 # optimization flags
-OPT_FLAGS_STD="-mcmodel=medium -O3"
-
-#OPT_FLAGS_MAG="-O3"
-OPT_FLAGS_MAG=${OPT_FLAGS_STD}
-
-export OMP_NUM_THREADS=2
+OPT_FLAGS_STD="-O3 -g -qopenmp -mcmodel=medium"
+OPT_FLAGS_MAG="-O3 -g -qopenmp -mcmodel=medium"
 
 ###############################################################################
 # DONT'T TOUCH WHAT FOLLOWS !!!
@@ -88,4 +54,4 @@ fi
 source $SOURCE_ROOT/makenek.inc
 # compile
 make -j4 -f makefile 2>&1 | tee compiler.out
-#original--> exit 0
+exit 0
-- 
2.12.3

