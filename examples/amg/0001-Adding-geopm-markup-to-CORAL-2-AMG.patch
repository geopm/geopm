From c85f3d5f9368a2ae1e47a5dc0ada286d5a14e17c Mon Sep 17 00:00:00 2001
From: Diana Guttman <diana.r.guttman@intel.com>
Date: Tue, 18 Sep 2018 21:23:35 +0000
Subject: [PATCH] Adding geopm markup to CORAL 2 AMG.

#  Copyright (c) 2015, 2016, 2017, 2018, Intel Corporation
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions
#  are met:
#
#      * Redistributions of source code must retain the above copyright
#        notice, this list of conditions and the following disclaimer.
#
#      * Redistributions in binary form must reproduce the above copyright
#        notice, this list of conditions and the following disclaimer in
#        the documentation and/or other materials provided with the
#        distribution.
#
#      * Neither the name of Intel Corporation nor the names of its
#        contributors may be used to endorse or promote products derived
#        from this software without specific prior written permission.
#
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
#  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
#  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
#  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
#  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
#  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
#  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
#  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY LOG OF THE USE
#  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

Signed-off-by: Diana Guttman <diana.r.guttman@intel.com>
---
 Makefile.include |  3 ++-
 krylov/pcg.c     | 24 +++++++++++++++++++
 test/amg.c       | 72 ++++++++++++++++++++++++++++++++++++++++++++++++++++++--
 3 files changed, 96 insertions(+), 3 deletions(-)

diff --git a/Makefile.include b/Makefile.include
index b73ccce..ec2f9b1 100644
--- a/Makefile.include
+++ b/Makefile.include
@@ -45,9 +45,10 @@ CC = mpicc
 #INCLUDE_CFLAGS = -O2 -DTIMER_USE_MPI -DHYPRE_USING_OPENMP -DHYPRE_BIGINT -fopenmp
 INCLUDE_CFLAGS = -O2 -DTIMER_USE_MPI -DHYPRE_USING_OPENMP -fopenmp -DHYPRE_HOPSCOTCH -DHYPRE_USING_PERSISTENT_COMM -DHYPRE_BIGINT
 #INCLUDE_CFLAGS = -O2 -DTIMER_USE_MPI -DHYPRE_USING_OPENMP -qsmp=omp -qmaxmem=-1 -DHYPRE_HOPSCOTCH -DHYPRE_USING_PERSISTENT_COMM -DHYPRE_BIGINT
+INCLUDE_CFLAGS += -xMIC-AVX512 -I$(HOME)/build/geopm/include -DGEOPM
 
 # set link flags here
 #INCLUDE_LFLAGS = -lm -qsmp=omp
 INCLUDE_LFLAGS = -lm -fopenmp
 #INCLUDE_LFLAGS = -lm 
-
+INCLUDE_LFLAGS += -L$(HOME)/build/geopm/lib -lgeopm -dynamic
diff --git a/krylov/pcg.c b/krylov/pcg.c
index 2492dae..06de01e 100644
--- a/krylov/pcg.c
+++ b/krylov/pcg.c
@@ -33,6 +33,10 @@
 #include "krylov.h"
 #include "_hypre_utilities.h"
 
+#ifdef GEOPM
+#include "geopm.h"
+#endif
+
 /*--------------------------------------------------------------------------
  * hypre_PCGFunctionsCreate
  *--------------------------------------------------------------------------*/
@@ -319,6 +323,13 @@ hypre_PCGSolve( void *pcg_vdata,
    HYPRE_Int             i = 0;
    HYPRE_Int             my_id, num_procs;
 
+#ifdef GEOPM
+   uint64_t   region_id = 0;
+
+   geopm_prof_region("PCGSolveSetup", 0, &region_id);
+   geopm_prof_enter(region_id);
+#endif
+
    (pcg_data -> converged) = 0;
 
    (*(pcg_functions->CommInfo))(A,&my_id,&num_procs);
@@ -476,8 +487,18 @@ hypre_PCGSolve( void *pcg_vdata,
       }
    }
 
+#ifdef GEOPM
+   geopm_prof_exit(region_id);
+#endif
+
    while ((i+1) <= max_iter)
    {
+#ifdef GEOPM
+       geopm_prof_epoch();
+       geopm_prof_region("PCGSolveLoop", 0, &region_id);
+       geopm_prof_enter(region_id);
+#endif
+
       /*--------------------------------------------------------------------
        * the core CG calculations...
        *--------------------------------------------------------------------*/
@@ -711,6 +732,9 @@ hypre_PCGSolve( void *pcg_vdata,
       else
          (*(pcg_functions->CopyVector))(s, p);
    }
+#ifdef GEOPM
+    geopm_prof_exit(region_id);
+#endif
 
    /*--------------------------------------------------------------------
     * Finish up with some outputs.
diff --git a/test/amg.c b/test/amg.c
index fb5ccb5..9c606f9 100644
--- a/test/amg.c
+++ b/test/amg.c
@@ -37,6 +37,10 @@
 
 #include <time.h>
 
+#ifdef GEOPM
+#include "geopm.h"
+#endif
+
 #ifdef __cplusplus
 extern "C" {
 #endif
@@ -136,6 +140,11 @@ main( hypre_int argc,
 
    HYPRE_Real *values;
 
+#ifdef GEOPM
+   uint64_t   region_id = 0;
+#endif
+
+
    /*-----------------------------------------------------------
     * Initialize some stuff
     *-----------------------------------------------------------*/
@@ -266,6 +275,10 @@ main( hypre_int argc,
    /*-----------------------------------------------------------
     * Set up matrix
     *-----------------------------------------------------------*/
+#ifdef GEOPM
+      geopm_prof_region("MatrixSetup", 0, &region_id);
+      geopm_prof_enter(region_id);
+#endif
 
    time_index = hypre_InitializeTiming("Spatial Operator");
    hypre_BeginTiming(time_index);
@@ -279,10 +292,17 @@ main( hypre_int argc,
    hypre_PrintTiming("Generate Matrix", &wall_time, hypre_MPI_COMM_WORLD);
    hypre_FinalizeTiming(time_index);
    hypre_ClearTiming();
+#ifdef GEOPM
+   geopm_prof_exit(region_id);
+#endif
 
    /*-----------------------------------------------------------
     * Set up the RHS and initial guess
     *-----------------------------------------------------------*/
+#ifdef GEOPM
+      geopm_prof_region("IJVectorSetup", 0, &region_id);
+      geopm_prof_enter(region_id);
+#endif
 
    time_index = hypre_InitializeTiming("RHS and Initial Guess");
    hypre_BeginTiming(time_index);
@@ -343,6 +363,9 @@ main( hypre_int argc,
 
    }
 
+#ifdef GEOPM
+   geopm_prof_exit(region_id);
+#endif
    /*-----------------------------------------------------------
     * Problem 1: Solve one large problem with AMG-PCG
     *-----------------------------------------------------------*/
@@ -350,6 +373,10 @@ main( hypre_int argc,
 
    if (problem_id == 1 )
    {
+#ifdef GEOPM
+      geopm_prof_region("PCGSetup", 0, &region_id);
+      geopm_prof_enter(region_id);
+#endif
       time_index = hypre_InitializeTiming("PCG Setup");
       hypre_MPI_Barrier(hypre_MPI_COMM_WORLD);
       hypre_BeginTiming(time_index);
@@ -402,6 +429,10 @@ main( hypre_int argc,
       hypre_ClearTiming();
       fflush(NULL);
 
+#ifdef GEOPM
+      geopm_prof_exit(region_id);
+#endif
+
       HYPRE_BoomerAMGGetCumNnzAP(pcg_precond, &cum_nnz_AP);
 
       FOM1 = cum_nnz_AP/ wall_time;
@@ -416,6 +447,11 @@ main( hypre_int argc,
       HYPRE_PCGSolve(pcg_solver, (HYPRE_Matrix)parcsr_A, 
                      (HYPRE_Vector)b, (HYPRE_Vector)x);
  
+#ifdef GEOPM
+      geopm_prof_region("PCGTeardown", 0, &region_id);
+      geopm_prof_enter(region_id);
+#endif
+
       hypre_MPI_Barrier(hypre_MPI_COMM_WORLD);
       hypre_EndTiming(time_index);
       hypre_PrintTiming("Problem 1: AMG-PCG Solve Time", &wall_time, hypre_MPI_COMM_WORLD);
@@ -444,7 +480,9 @@ main( hypre_int argc,
          FOM1 /= 4.0;
          printf ("\n\nFigure of Merit (FOM_1): %e\n\n", FOM1);
       }
- 
+#ifdef GEOPM
+      geopm_prof_exit(region_id);
+#endif
    }
 
    /*-----------------------------------------------------------
@@ -453,15 +491,30 @@ main( hypre_int argc,
 
    if (problem_id == 2)
    {
+#ifdef GEOPM
+      geopm_prof_region("GMRESSetup", 0, &region_id);
+      geopm_prof_enter(region_id);
+#endif
+
       HYPRE_Real eps;
       HYPRE_Real diagonal = 26.5;
       AddOrRestoreAIJ(ij_A, diagonal, 0);
+#ifdef GEOPM
+      geopm_prof_exit(region_id);
+#endif
       time_index = hypre_InitializeTiming("GMRES Solve");
       hypre_MPI_Barrier(hypre_MPI_COMM_WORLD);
       hypre_BeginTiming(time_index);
+
+#ifdef GEOPM
+      geopm_prof_region("GMRESloop", 0, &region_id);
+      geopm_prof_enter(region_id);
+#endif
       for (j=0; j < time_steps; j++)
       {
- 
+#ifdef GEOPM
+         geopm_prof_epoch();
+#endif
          HYPRE_ParCSRGMRESCreate(hypre_MPI_COMM_WORLD, &pcg_solver);
          HYPRE_GMRESSetKDim(pcg_solver, k_dim);
          HYPRE_GMRESSetMaxIter(pcg_solver, max_iter);
@@ -551,6 +604,16 @@ main( hypre_int argc,
             HYPRE_ParVectorSetConstantValues(b,1.0);
          }
       }
+
+#ifdef GEOPM
+      geopm_prof_exit(region_id);
+#endif
+
+#ifdef GEOPM
+      geopm_prof_region("GMRESTeardown", 0, &region_id);
+      geopm_prof_enter(region_id);
+#endif
+
       hypre_MPI_Barrier(hypre_MPI_COMM_WORLD);
       hypre_EndTiming(time_index);
       hypre_PrintTiming("Problem 2: Cumulative AMG-GMRES Solve Time", &wall_time, hypre_MPI_COMM_WORLD);
@@ -568,6 +631,11 @@ main( hypre_int argc,
          printf ("\nFigure of Merit (FOM_2): %e\n\n", (cum_nnz_AP*(HYPRE_Real)(num_iterations +time_steps)/ wall_time));
          hypre_printf("\n");
       }
+
+#ifdef GEOPM
+      geopm_prof_exit(region_id);
+#endif
+
    }
  
 
-- 
2.12.3

