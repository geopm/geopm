%define pname geopm
%define PNAME GEOPM
%define install_prefix  /soft/perftools/%{pname}/%{pname}-%{version}-%{release}
%define module_prefix   /soft/environment/modules/modulefiles/%{pname}
%define module_name     %{version}-%{release}

Name:          %{pname}
Summary:       Global Extensible Open Power Manager
Version:       @VERSION@
Release:       2
License:       BSD-3-Clause
Group:         System Environment/Libraries
URL:           https://geopm.github.io
Source0:       https://github.com/geopm/geopm/releases/download/v%{version}/geopm-%{version}.tar.gz
BuildRequires: autoconf
BuildRequires: automake
BuildRequires: hwloc-devel
BuildRequires: libtool
BuildRequires: libtool-ltdl-devel
BuildRequires: python
BuildRequires: python-devel
BuildRequires: unzip
BuildRequires: openssh

%description
@BLURB@

%prep

%setup -q -n %{pname}-%{version}

%build
test -f configure || ./autogen.sh
CC='cc -dynamic' \
CXX='CC -dynamic' \
MPICC='cc -dynamic' \
MPICXX='CC -dynamic' \
FC='ftn' \
F77='ftn' \
CFLAGS='-xCORE-AVX2' \
CXXFLAGS='-xCORE-AVX2' \
FCFLAGS='-dynamic -xCORE-AVX2' \
FFLAGS='-dynamic -xCORE-AVX2' \
./configure --prefix=%{install_prefix} \
            --with-python=%{__python2} \
            --disable-doc \
            || ( cat config.log && false )
%{__make} -j16


%install
module swap PrgEnv-intel PrgEnv-gnu
%{__python2} -m pip install --ignore-installed --target=%{buildroot}/%{install_prefix}/lib/python%{python_version}/site-packages \
            -r ./scripts/requirements.txt
module swap PrgEnv-gnu PrgEnv-intel
%{__make} DESTDIR=%{buildroot} install
rm -f $(find %{buildroot}/%{install_prefix} -name '*.a'; \
        find %{buildroot}/%{install_prefix} -name '*.la'; \
        find %{buildroot}/%{install_prefix} -name 'geopm_launcher.1*')

# Module file
# OpenHPC module file
%{__mkdir_p} %{buildroot}%{module_prefix}
%{__cat} << EOF > %{buildroot}/%{module_prefix}/%{version}-%{release}
#%Module1.0#####################################################################

proc ModulesHelp { } {

puts stderr " "
puts stderr "This module loads the %{pname} package built with the intel compiler"
puts stderr "toolchain and the cray mpich MPI stack."
puts stderr "\nVersion %{version}-%{release}\n"

}
module-whatis "Name: %{pname}"
module-whatis "Version: %{version}-%{release}"
module-whatis "Category: perftools"
module-whatis "Description: %{summary}"
module-whatis "URL: %{url}"
module-whatis "ALCF Theta tutorial: https://github.com/geopm/theta-tutorial"
module-whatis "ALCF Theta guide: https://github.com/geopm/theta-tutorial/blob/master/QUICKSTART.md"

conflict "darshan"

prepend-path    PATH                    %{install_prefix}/bin
prepend-path    PYTHONPATH              %{install_prefix}/lib/python%{python_version}/site-packages
prepend-path    INCLUDE                 %{install_prefix}/include
prepend-path    LD_LIBRARY_PATH         %{install_prefix}/lib
prepend-path    MANPATH                 %{install_prefix}/share/man

setenv          %{PNAME}_DIR            %{install_prefix}
setenv          %{PNAME}_BIN            %{install_prefix}/bin
setenv          %{PNAME}_LIB            %{install_prefix}/lib
setenv          %{PNAME}_INC            %{install_prefix}/include

setenv          PMI_NO_FORK             1
setenv          PMI_NO_PREINITIALIZE    1

EOF

%files
%defattr(-,root,root,-)
%{install_prefix}/*
%{module_prefix}/*

%changelog
* Wed Aug 15 2018 <christopher.m.cantalupo@intel.com> v0.5.1
- Initial commit.
