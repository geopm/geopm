{
  "comments": [
    {
      "key": {
        "uuid": "3e0f5c55_723fc771",
        "filename": "scripts/geopmpy/agent.py",
        "patchSetId": 5
      },
      "lineNbr": 125,
      "author": {
        "id": 1012567
      },
      "writtenOn": "2019-09-27T21:50:01Z",
      "side": 1,
      "message": "I\u0027m a little bothered that the caller needs to know so much detail about how the json string is formatted. Maybe we need another function to calculate this size, or change geopm_agent_policy_json to allocate the buffer itself (which would make it behave differently than all our other functions that return strings)",
      "revId": "d838b9e7533261bbbb8897b10e28f455cee68dcd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2acf3940_1ec6e7c4",
        "filename": "scripts/geopmpy/agent.py",
        "patchSetId": 5
      },
      "lineNbr": 125,
      "author": {
        "id": 1016629
      },
      "writtenOn": "2019-09-27T22:08:29Z",
      "side": 1,
      "message": "Another approach could be to try something like 1024 bytes, then keep doubling and retrying every time it fails with an invalid argument error code. Maybe limit it to 10 tries (arbitrarily chosen), though I expect most would stop on iteration 1 or 2. How does that sound?",
      "parentUuid": "3e0f5c55_723fc771",
      "revId": "d838b9e7533261bbbb8897b10e28f455cee68dcd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e069a903_230588a9",
        "filename": "scripts/geopmpy/agent.py",
        "patchSetId": 5
      },
      "lineNbr": 125,
      "author": {
        "id": 1016629
      },
      "writtenOn": "2019-10-10T19:53:27Z",
      "side": 1,
      "message": "Continued the discussion offline. Going back to a hard-coded buffer size, but keeping it separate from the size of the buffers used in other functions here.",
      "parentUuid": "2acf3940_1ec6e7c4",
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "d838b9e7533261bbbb8897b10e28f455cee68dcd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4c9f5d43_a4326cd6",
        "filename": "src/FrequencyMapAgent.cpp",
        "patchSetId": 5
      },
      "lineNbr": 154,
      "author": {
        "id": 1011138
      },
      "writtenOn": "2019-10-08T18:26:46Z",
      "side": 1,
      "message": "https://github.com/geopm/geopm/blob/dev/src/geopm_hash.h#L51",
      "range": {
        "startLine": 154,
        "startChar": 30,
        "endLine": 154,
        "endChar": 56
      },
      "revId": "d838b9e7533261bbbb8897b10e28f455cee68dcd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8b7d00ae_0ffd07cb",
        "filename": "src/FrequencyMapAgent.cpp",
        "patchSetId": 5
      },
      "lineNbr": 154,
      "author": {
        "id": 1016629
      },
      "writtenOn": "2019-10-08T21:26:46Z",
      "side": 1,
      "message": "I\u0027ve added a comment explaining why we don\u0027t use that here. We stopped doing that in an earlier revision since it meant users would have to do the memory reinterpretation themselves when creating a frequency map. As a result, they would not be able to simply copy/paste the output from an EE agent report to the frequency map.\n\nIn the other direction, I imagine we could modify the geopm_hash conversion functions to do static cast instead. It works for values between +/- 2^53, and we only need the lower 32 bits for region hashes.",
      "parentUuid": "4c9f5d43_a4326cd6",
      "range": {
        "startLine": 154,
        "startChar": 30,
        "endLine": 154,
        "endChar": 56
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "d838b9e7533261bbbb8897b10e28f455cee68dcd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c301f02f_d051cd6c",
        "filename": "src/FrequencyMapAgent.cpp",
        "patchSetId": 5
      },
      "lineNbr": 156,
      "author": {
        "id": 1011138
      },
      "writtenOn": "2019-10-08T18:26:46Z",
      "side": 1,
      "message": "call this out in documentation?",
      "range": {
        "startLine": 156,
        "startChar": 16,
        "endLine": 156,
        "endChar": 72
      },
      "revId": "d838b9e7533261bbbb8897b10e28f455cee68dcd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0e3817ee_99e985a0",
        "filename": "src/FrequencyMapAgent.cpp",
        "patchSetId": 5
      },
      "lineNbr": 156,
      "author": {
        "id": 1016629
      },
      "writtenOn": "2019-10-08T21:26:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c301f02f_d051cd6c",
      "range": {
        "startLine": 156,
        "startChar": 16,
        "endLine": 156,
        "endChar": 72
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "d838b9e7533261bbbb8897b10e28f455cee68dcd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4c62f4fc_a23ff855",
        "filename": "src/FrequencyMapAgent.cpp",
        "patchSetId": 5
      },
      "lineNbr": 184,
      "author": {
        "id": 1011138
      },
      "writtenOn": "2019-10-08T18:26:46Z",
      "side": 1,
      "message": "https://github.com/geopm/geopm/blob/dev/src/geopm_hash.h#L51",
      "range": {
        "startLine": 184,
        "startChar": 28,
        "endLine": 184,
        "endChar": 55
      },
      "revId": "d838b9e7533261bbbb8897b10e28f455cee68dcd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "91ade1bb_9bdda916",
        "filename": "src/FrequencyMapAgent.cpp",
        "patchSetId": 5
      },
      "lineNbr": 184,
      "author": {
        "id": 1016629
      },
      "writtenOn": "2019-10-08T21:26:46Z",
      "side": 1,
      "message": "Same as above. Those helper functions make human interaction more difficult.",
      "parentUuid": "4c62f4fc_a23ff855",
      "range": {
        "startLine": 184,
        "startChar": 28,
        "endLine": 184,
        "endChar": 55
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "d838b9e7533261bbbb8897b10e28f455cee68dcd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "186635de_bc34daf0",
        "filename": "test_integration/geopm_test_integration.py",
        "patchSetId": 5
      },
      "lineNbr": 1049,
      "author": {
        "id": 1011138
      },
      "writtenOn": "2019-10-08T18:26:46Z",
      "side": 1,
      "message": "can remove these skips no?  or is it useful for test output?",
      "range": {
        "startLine": 1047,
        "startChar": 4,
        "endLine": 1049,
        "endChar": 33
      },
      "revId": "d838b9e7533261bbbb8897b10e28f455cee68dcd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "64d897a1_d3ba715c",
        "filename": "test_integration/geopm_test_integration.py",
        "patchSetId": 5
      },
      "lineNbr": 1049,
      "author": {
        "id": 1016629
      },
      "writtenOn": "2019-10-08T21:26:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "186635de_bc34daf0",
      "range": {
        "startLine": 1047,
        "startChar": 4,
        "endLine": 1049,
        "endChar": 33
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "d838b9e7533261bbbb8897b10e28f455cee68dcd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}