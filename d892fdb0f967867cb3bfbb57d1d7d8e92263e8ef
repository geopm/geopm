{
  "comments": [
    {
      "key": {
        "uuid": "9b1c2c26_2a2fdbf5",
        "filename": "src/CNLIOGroup.cpp",
        "patchSetId": 1
      },
      "lineNbr": 50,
      "author": {
        "id": 1012567
      },
      "writtenOn": "2019-08-01T01:47:58Z",
      "side": 1,
      "message": "Just have \"using std::placeholders::thing;\".  I don\u0027t see what\u0027s being used though.",
      "revId": "d892fdb0f967867cb3bfbb57d1d7d8e92263e8ef",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "52d0a71e_6a1f2cb9",
        "filename": "src/CNLIOGroup.cpp",
        "patchSetId": 1
      },
      "lineNbr": 50,
      "author": {
        "id": 1016629
      },
      "writtenOn": "2019-08-01T18:38:13Z",
      "side": 1,
      "message": "Oops. It was being used in std::bind, but I removed it in a later revision. It lets you bind inputs from the wrapper function to inputs in the wrapped function. The current revision binds all wrapped inputs so the wrapper takes no arguments. My next revision will probably drop std::bind, anyways.",
      "parentUuid": "9b1c2c26_2a2fdbf5",
      "revId": "d892fdb0f967867cb3bfbb57d1d7d8e92263e8ef",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "69837619_7adf83a1",
        "filename": "src/CNLIOGroup.cpp",
        "patchSetId": 1
      },
      "lineNbr": 54,
      "author": {
        "id": 1002495
      },
      "writtenOn": "2019-07-31T19:11:04Z",
      "side": 1,
      "message": "Use geopm::string_read_file() and std::stod() while also using remainder to check units",
      "range": {
        "startLine": 54,
        "startChar": 8,
        "endLine": 54,
        "endChar": 62
      },
      "revId": "d892fdb0f967867cb3bfbb57d1d7d8e92263e8ef",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "df283090_2c7f5a8f",
        "filename": "src/CNLIOGroup.cpp",
        "patchSetId": 1
      },
      "lineNbr": 80,
      "author": {
        "id": 1012567
      },
      "writtenOn": "2019-08-01T01:47:58Z",
      "side": 1,
      "message": "ws",
      "range": {
        "startLine": 80,
        "startChar": 8,
        "endLine": 80,
        "endChar": 9
      },
      "revId": "d892fdb0f967867cb3bfbb57d1d7d8e92263e8ef",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "64c66955_cda3eb8c",
        "filename": "src/CNLIOGroup.cpp",
        "patchSetId": 1
      },
      "lineNbr": 97,
      "author": {
        "id": 1012567
      },
      "writtenOn": "2019-08-01T01:47:58Z",
      "side": 1,
      "message": "There\u0027s a lot of repeated code in here.  Could this be done in a loop with emplace, or does it need to be in the initializer list?",
      "revId": "d892fdb0f967867cb3bfbb57d1d7d8e92263e8ef",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9a1e6739_3b6b6dbb",
        "filename": "src/CNLIOGroup.cpp",
        "patchSetId": 1
      },
      "lineNbr": 97,
      "author": {
        "id": 1016629
      },
      "writtenOn": "2019-08-01T18:38:13Z",
      "side": 1,
      "message": "I\u0027ll replace the std::function struct member with 2 strings: file name and the units suffix.",
      "parentUuid": "64c66955_cda3eb8c",
      "revId": "d892fdb0f967867cb3bfbb57d1d7d8e92263e8ef",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a2af0187_25370a11",
        "filename": "src/CNLIOGroup.cpp",
        "patchSetId": 1
      },
      "lineNbr": 103,
      "author": {
        "id": 1012567
      },
      "writtenOn": "2019-08-01T01:47:58Z",
      "side": 1,
      "message": "I prefer this on the next line",
      "range": {
        "startLine": 103,
        "startChar": 22,
        "endLine": 103,
        "endChar": 24
      },
      "revId": "d892fdb0f967867cb3bfbb57d1d7d8e92263e8ef",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0bbd1c85_740d6ea8",
        "filename": "src/CNLIOGroup.cpp",
        "patchSetId": 1
      },
      "lineNbr": 114,
      "author": {
        "id": 1002495
      },
      "writtenOn": "2019-07-31T19:11:04Z",
      "side": 1,
      "message": "okay, but lets be consistent with the other code\u0027s use of \u003ccmath\u003e NAN.",
      "range": {
        "startLine": 114,
        "startChar": 25,
        "endLine": 114,
        "endChar": 64
      },
      "revId": "d892fdb0f967867cb3bfbb57d1d7d8e92263e8ef",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "12aa275c_1931512a",
        "filename": "src/CNLIOGroup.cpp",
        "patchSetId": 1
      },
      "lineNbr": 114,
      "author": {
        "id": 1016629
      },
      "writtenOn": "2019-08-01T18:38:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0bbd1c85_740d6ea8",
      "range": {
        "startLine": 114,
        "startChar": 25,
        "endLine": 114,
        "endChar": 64
      },
      "revId": "d892fdb0f967867cb3bfbb57d1d7d8e92263e8ef",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f6f62c95_f74d2879",
        "filename": "src/CNLIOGroup.cpp",
        "patchSetId": 1
      },
      "lineNbr": 252,
      "author": {
        "id": 1012567
      },
      "writtenOn": "2019-08-01T01:47:58Z",
      "side": 1,
      "message": "In the future, will this ever be something other than read_double_from_file() ?",
      "range": {
        "startLine": 252,
        "startChar": 44,
        "endLine": 252,
        "endChar": 61
      },
      "revId": "d892fdb0f967867cb3bfbb57d1d7d8e92263e8ef",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4d919125_308bab48",
        "filename": "src/CNLIOGroup.cpp",
        "patchSetId": 1
      },
      "lineNbr": 252,
      "author": {
        "id": 1016629
      },
      "writtenOn": "2019-08-01T18:38:13Z",
      "side": 1,
      "message": "Doubtful. The next revision will directly call read_double_from_file, with arguments derived from the signal struct.",
      "parentUuid": "f6f62c95_f74d2879",
      "range": {
        "startLine": 252,
        "startChar": 44,
        "endLine": 252,
        "endChar": 61
      },
      "revId": "d892fdb0f967867cb3bfbb57d1d7d8e92263e8ef",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a05a8434_5cbdedd9",
        "filename": "src/CNLIOGroup.cpp",
        "patchSetId": 1
      },
      "lineNbr": 305,
      "author": {
        "id": 1012567
      },
      "writtenOn": "2019-08-01T01:47:58Z",
      "side": 1,
      "message": "could also be geopm::make_unique.  I see that some of the other IOGroups are using new also.",
      "revId": "d892fdb0f967867cb3bfbb57d1d7d8e92263e8ef",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6740954c_bf13b710",
        "filename": "src/CNLIOGroup.cpp",
        "patchSetId": 1
      },
      "lineNbr": 305,
      "author": {
        "id": 1016629
      },
      "writtenOn": "2019-08-01T18:38:13Z",
      "side": 1,
      "message": "I\u0027ll switch to geopm::make_unique. Hopefully that will simplify migration to std::make_unique if there\u0027s a C++14 move in the future.",
      "parentUuid": "a05a8434_5cbdedd9",
      "revId": "d892fdb0f967867cb3bfbb57d1d7d8e92263e8ef",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c66c6f69_fab9be58",
        "filename": "src/CNLIOGroup.hpp",
        "patchSetId": 1
      },
      "lineNbr": 78,
      "author": {
        "id": 1002495
      },
      "writtenOn": "2019-07-31T19:11:04Z",
      "side": 1,
      "message": "Add sample rate and age.",
      "revId": "d892fdb0f967867cb3bfbb57d1d7d8e92263e8ef",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8d10c036_f76ed157",
        "filename": "src/CNLIOGroup.hpp",
        "patchSetId": 1
      },
      "lineNbr": 79,
      "author": {
        "id": 1002495
      },
      "writtenOn": "2019-07-31T19:11:04Z",
      "side": 1,
      "message": "NUM_SIGNAL_TYPE",
      "range": {
        "startLine": 79,
        "startChar": 16,
        "endLine": 79,
        "endChar": 33
      },
      "revId": "d892fdb0f967867cb3bfbb57d1d7d8e92263e8ef",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5c84731d_f734a8fb",
        "filename": "src/CNLIOGroup.hpp",
        "patchSetId": 1
      },
      "lineNbr": 79,
      "author": {
        "id": 1016629
      },
      "writtenOn": "2019-08-01T18:38:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8d10c036_f76ed157",
      "range": {
        "startLine": 79,
        "startChar": 16,
        "endLine": 79,
        "endChar": 33
      },
      "revId": "d892fdb0f967867cb3bfbb57d1d7d8e92263e8ef",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fe104d35_45ffe225",
        "filename": "src/IOGroup.cpp",
        "patchSetId": 1
      },
      "lineNbr": 53,
      "author": {
        "id": 1012567
      },
      "writtenOn": "2019-08-01T01:47:58Z",
      "side": 1,
      "message": "commenting here to add a reminder to discuss whether we want this as a built-in IOGroup.  It shouldn\u0027t break anything. but on non-CNL systems, the Controller will always print the warning about the IOGroup failing to load.",
      "revId": "d892fdb0f967867cb3bfbb57d1d7d8e92263e8ef",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "46dfb996_7bc92bed",
        "filename": "test/CNLIOGroupTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 1012567
      },
      "writtenOn": "2019-08-01T01:47:58Z",
      "side": 1,
      "message": "I think we usually use unlink.. this is confusingly overloaded by std algorithm",
      "range": {
        "startLine": 83,
        "startChar": 4,
        "endLine": 83,
        "endChar": 15
      },
      "revId": "d892fdb0f967867cb3bfbb57d1d7d8e92263e8ef",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fc2ba931_20d7b954",
        "filename": "test/CNLIOGroupTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 109,
      "author": {
        "id": 1012567
      },
      "writtenOn": "2019-08-01T01:47:58Z",
      "side": 1,
      "message": "test that writing a different value changes the value returned by read_signal()",
      "revId": "d892fdb0f967867cb3bfbb57d1d7d8e92263e8ef",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aff5f019_7a158800",
        "filename": "test/CNLIOGroupTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 124,
      "author": {
        "id": 1012567
      },
      "writtenOn": "2019-08-01T01:47:58Z",
      "side": 1,
      "message": "same comment for this test",
      "revId": "d892fdb0f967867cb3bfbb57d1d7d8e92263e8ef",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3a49d11d_228ee218",
        "filename": "test/CNLIOGroupTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 163,
      "author": {
        "id": 1012567
      },
      "writtenOn": "2019-08-01T01:47:58Z",
      "side": 1,
      "message": "some other bad strings: invalid number, \"85W\", extra whitespace and characters",
      "revId": "d892fdb0f967867cb3bfbb57d1d7d8e92263e8ef",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6834c440_1ed7e589",
        "filename": "test/CNLIOGroupTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 176,
      "author": {
        "id": 1012567
      },
      "writtenOn": "2019-08-01T01:47:58Z",
      "side": 1,
      "message": "looks like this can go in the test setup",
      "range": {
        "startLine": 168,
        "startChar": 0,
        "endLine": 176,
        "endChar": 31
      },
      "revId": "d892fdb0f967867cb3bfbb57d1d7d8e92263e8ef",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    }
  ]
}