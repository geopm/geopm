geopm::SharedMemory(3) -- abstractions for shared memory
========================================================

[//]: # (Copyright (c) 2015 - 2021, Intel Corporation)
[//]: # ()
[//]: # (Redistribution and use in source and binary forms, with or without)
[//]: # (modification, are permitted provided that the following conditions)
[//]: # (are met:)
[//]: # ()
[//]: # (    * Redistributions of source code must retain the above copyright)
[//]: # (      notice, this list of conditions and the following disclaimer.)
[//]: # ()
[//]: # (    * Redistributions in binary form must reproduce the above copyright)
[//]: # (      notice, this list of conditions and the following disclaimer in)
[//]: # (      the documentation and/or other materials provided with the)
[//]: # (      distribution.)
[//]: # ()
[//]: # (    * Neither the name of Intel Corporation nor the names of its)
[//]: # (      contributors may be used to endorse or promote products derived)
[//]: # (      from this software without specific prior written permission.)
[//]: # ()
[//]: # (THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS)
[//]: # ("AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT)
[//]: # (LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR)
[//]: # (A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT)
[//]: # (OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,)
[//]: # (SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT)
[//]: # (LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,)
[//]: # (DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY)
[//]: # (THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT)
[//]: # ((INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY LOG OF THE USE)
[//]: # (OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.)

## SYNOPSIS

**\#include [<geopm/SharedMemory.hpp>](https://github.com/geopm/geopm/blob/dev/src/SharedMemory.hpp)**

`Link with -lgeopm (MPI) or -lgeopmpolicy (non-MPI)`

  * `std::unique_ptr<SharedMemory> make_unique_owner(`:
    `const std::string` _shm_key_`,` <br>
    `size_t` _size_`);`

  * `std::unique_ptr<SharedMemory> make_unique_user(`:
    `const std::string` _shm_key_`,` <br>
    `unsigned int` _timeout_`);`

  * `void *pointer(`:
    `void) const;`

  * `std::string key(`:
    `void) const;`

  * `size_t size(`:
    `void) const;`

  * `void unlink(`:
    `void);`

  * `std::unique_ptr<SharedMemoryScopedLock> get_scoped_lock(`:
    `void);`


## DESCRIPTION
The SharedMemory class encapsulates the creation and use of
inter-process shared memory.  In the GEOPM runtime, shared memory is
used to communicate between the user application's MPI calls and calls
to **geopm_prof_c(3)** methods, and the Controller running on the same
node.

## CLASS METHODS

  * `make_unique_owner`():
    Creates a shared memory region with key _shm_key_ and _size_ and
    returns a pointer to a SharedMemory object managing it.

  * `make_unique_user`():
    Attempts to attach to a inter-process shared memory region with
    key _shm_key_ within _timeout_ and returns a pointer to a
    SharedMemory object managing it.

  * `pointer`():
    Returns a pointer to the shared memory region.

  * `key`():
    Returns the key to the shared memory region.

  * `size`():
    Returns the size of the shared memory region.

  * `unlink`():
    Unlink the shared memory region.

  * `get_scoped_lock`():
    Returns a temporary object that holds the mutex lock for the
    shared memory region while in scope, and releases it when it goes
    out of scope.  This method should be called before accessing the
    memory with `pointer`().

## COPYRIGHT
Copyright (c) 2015 - 2021, Intel Corporation. All rights reserved.

## SEE ALSO
**geopm(7)**
