geopm::SharedMemory(3) -- abstractions for shared memory
========================================================

[//]: # (Copyright (c) 2015, 2016, 2017, 2018, 2019, 2020, Intel Corporation)
[//]: # ()
[//]: # (Redistribution and use in source and binary forms, with or without)
[//]: # (modification, are permitted provided that the following conditions)
[//]: # (are met:)
[//]: # ()
[//]: # (    * Redistributions of source code must retain the above copyright)
[//]: # (      notice, this list of conditions and the following disclaimer.)
[//]: # ()
[//]: # (    * Redistributions in binary form must reproduce the above copyright)
[//]: # (      notice, this list of conditions and the following disclaimer in)
[//]: # (      the documentation and/or other materials provided with the)
[//]: # (      distribution.)
[//]: # ()
[//]: # (    * Neither the name of Intel Corporation nor the names of its)
[//]: # (      contributors may be used to endorse or promote products derived)
[//]: # (      from this software without specific prior written permission.)
[//]: # ()
[//]: # (THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS)
[//]: # ("AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT)
[//]: # (LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR)
[//]: # (A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT)
[//]: # (OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,)
[//]: # (SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT)
[//]: # (LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,)
[//]: # (DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY)
[//]: # (THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT)
[//]: # ((INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY LOG OF THE USE)
[//]: # (OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.)

## SYNOPSIS

**\#include [<geopm/SharedMemory.hpp>](https://github.com/geopm/geopm/blob/dev/src/SharedMemory.hpp)**

`Link with -lgeopm (MPI) or -lgeopmpolicy (non-MPI)`

  * `SharedMemory(`:
    `const std::string &`_shm_key_`,`<br>
    `size_t `_size_`);`

  * `~SharedMemory(`:
    `void);`

  * `void *SharedMemory::pointer(`:
    `void) const;`

  * `std::string SharedMemory::key(`:
    `void) const;`

  * `size_t SharedMemory::size(`:
    `void) const;`

  * `SharedMemoryUser(`:
    `const std::string &`_shm_key_`,`<br>
    `unsigned int `_timeout_`);`

  * `SharedMemoryUser(`:
    `const std::string &`_shm_key_`);`

  * `~SharedMemoryUser(`:
    `void);`

  * `void *SharedMemoryUser::pointer(`:
    `void) const;`

  * `std::string SharedMemoryUser::key(`:
    `void) const;`

  * `size_t SharedMemoryUser::size(`:
    `void) const;`

  * `void SharedMemoryUser::unlink(`:
    `void);`

## DESCRIPTION
The SharedMemory class encapsulates the creation of inter-process
shared memory.  The SharedMemoryUser class encapsulates attaching to
inter-process shared memory.  In the GEOPM runtime, shared memory is
used to communicate between the user application's MPI calls and calls
to **geopm_prof_c(3)** methods, and the Controller running on the same
node.

## SHAREDMEMORY CLASS METHODS

  * `SharedMemory`():
    Constructor creates an inter-process shared memory region with key
    _shm_key_ and _size_.

  * `~SharedMemory`():
    Destructor destroys and unlinks the shared memory region.

  * `pointer`():
    Returns a pointer to the shared memory region.

  * `key`():
    Returns the key to the shared memory region.

  * `size`():
    Returns the size of the shared memory region.


## SHAREDMEMORYUSER CLASS METHODS

  * `SharedMemoryUser`():
    Constructor attempts to attach to a inter-process shared memory
    region with key _shm_key_. This version of the constructor tries
    to attach multiple times until a _timeout_ in seconds is reached.

  * `SharedMemoryUser`():
    Constructor attempts to attach to a inter-process shared memory
    region with key _shm_key_. This version of the constructor
    attempts to attach a single time.

  * `~SharedMemoryUser`():
    Destructor detaches from shared memory region.

  * `pointer`():
    Returns a pointer to the shared memory region.

  * `key`():
    Returns the key to the shared memory region.

  * `size`():
    Returns the size of the shared memory region.

  * `unlink`():
    Unlink the shared memory region.

## COPYRIGHT
Copyright (c) 2015, 2016, 2017, 2018, 2019, 2020, Intel Corporation. All rights reserved.

## SEE ALSO
**geopm(7)**
