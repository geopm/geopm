geopm_sched.h(3) -- interface with Linux scheduler
==================================================

[//]: # (Copyright (c) 2015 - 2021, Intel Corporation)
[//]: # ()
[//]: # (Redistribution and use in source and binary forms, with or without)
[//]: # (modification, are permitted provided that the following conditions)
[//]: # (are met:)
[//]: # ()
[//]: # (    * Redistributions of source code must retain the above copyright)
[//]: # (      notice, this list of conditions and the following disclaimer.)
[//]: # ()
[//]: # (    * Redistributions in binary form must reproduce the above copyright)
[//]: # (      notice, this list of conditions and the following disclaimer in)
[//]: # (      the documentation and/or other materials provided with the)
[//]: # (      distribution.)
[//]: # ()
[//]: # (    * Neither the name of Intel Corporation nor the names of its)
[//]: # (      contributors may be used to endorse or promote products derived)
[//]: # (      from this software without specific prior written permission.)
[//]: # ()
[//]: # (THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS)
[//]: # ("AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT)
[//]: # (LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR)
[//]: # (A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT)
[//]: # (OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,)
[//]: # (SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT)
[//]: # (LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,)
[//]: # (DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY)
[//]: # (THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT)
[//]: # ((INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY LOG OF THE USE)
[//]: # (OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.)

## SYNOPSIS
**\#include [<geopm_sched.h>](https://github.com/geopm/geopm/blob/dev/src/geopm_sched.h)**

`Link with -lgeopm (MPI) or -lgeopmpolicy (non-MPI)`

  * `int geopm_sched_num_cpu(`:
    `void);`

  * `int geopm_sched_get_cpu(`:
    `void);`

  * `int geopm_sched_proc_cpuset(`:
    `int` _num_cpu_, <br>
    `cpu_set_t *`_proc_cpuset_`);`

  * `int geopm_sched_woomp(`:
    `int` _num_cpu_, <br>
    `cpu_set_t *`_woomp_`);`

  * `int geopm_sched_popen(`:
    `const char *`_cmd_, <br>
    `FILE **`_fid_`);`

## DESCRIPTION
The _geopm_sched.h_ header defines GEOPM interfaces for interacting with
the linux scheduler.

  * `geopm_sched_num_cpu`():
    Returns the number of online Linux logical CPUs on the system.

  * `geopm_sched_get_cpu`():
    Returns the Linux logical CPU index that the calling thread is executing on.

  * `geopm_sched_proc_cpuset`():
    Provides a **CPU_SET(3)** bit mask identifying the Linux logical CPUs on
    which the calling process is allowed to run. The user must allocate the bit
    arrary _proc_cpu_set_ prior to calling this function, and the number of bits
    allocated is given by the _num_cpu_ parameter. All of the bits in _proc_cpu_set_
    will be zeroed except for the offsets corresponding to CPUs that the process has
    access to which will be set to one. Returns zero on success and an error
    code on failure.

  * `geopm_sched_woomp`():
    Sets the **CPU_SET(3)** given by _woomp_ such that it includes all
    CPUs not used in an OpenMP parallel region but available to the
    calling thread.  If there are no CPU's that are part of the mask
    returned by **sched_getaffinity(2)** but not affinitized by an
    OpenMP thread then the returned mask will have all bits set,
    allowing the Linux scheduler to dynamically affinitize the thread.
    The cpu mask _woomp_ that is created by this function can be used
    with **pthread_attr_setaffinity_np(3)** to modify the attributes
    passed to `geopm_ctl_pthread`() so that the pthread created is
    affinitized to CPUs that do not have an OpenMP thread affinity.
    The mask generated when OpenMP threads are not statically
    affinitized is unreliable (i.e. use OMP_PROC_BIND environment
    variable).  The _num_cpu_ parameter specifies size of the CPU_SET
    in terms of number of CPUs.  If an error occurs a non-zero error
    number is returned. See **geopm_error(3)** for a full description
    of the error numbers and how to convert them to strings.

  * `geopm_sched_popen`():
    Enables calls to **popen(3)** within a process that is running the GEOPM
    Controller without triggering GEOPM's signal handling when the subprocess
    completes. This may be useful for built-in and plugin-loaded actors of the
    GEOPM runtime.  Unlike **popen(3)**, this function blocks until the opened process
    has completed, and it also suppresses the SIGCHILD signal which is raised
    when the opened process completes. The _cmd_ is the shell command that is
    executed, and the _fid_ is a file descriptor that provides the standard output
    from the opened process. Returns zero upon success and an error code on failure.
    Note that opening a child process will result in the MPI runtime killing the job
    with MPICH and possibly other implementations of MPI.

## COPYRIGHT
Copyright (c) 2015 - 2021, Intel Corporation. All rights reserved.

## SEE ALSO
**geopm(7)**,
**geopm_ctl_c(3)**,
**geopm_error(3)**,
**CPU_SET(3)**,
**popen(3)**,
**pthread_setaffinity_np(3)**,
**pthread_attr_setaffinity_np(3)**,
**sched_getaffinity(2)**,
**sched_getcpu(3)**
