geopm_pio_c(7) -- interfaces to query and modify platform
=========================================================

[//]: # (Copyright (c) 2015, 2016, 2017, 2018, 2019, Intel Corporation)
[//]: # ()
[//]: # (Redistribution and use in source and binary forms, with or without)
[//]: # (modification, are permitted provided that the following conditions)
[//]: # (are met:)
[//]: # ()
[//]: # (    * Redistributions of source code must retain the above copyright)
[//]: # (      notice, this list of conditions and the following disclaimer.)
[//]: # ()
[//]: # (    * Redistributions in binary form must reproduce the above copyright)
[//]: # (      notice, this list of conditions and the following disclaimer in)
[//]: # (      the documentation and/or other materials provided with the)
[//]: # (      distribution.)
[//]: # ()
[//]: # (    * Neither the name of Intel Corporation nor the names of its)
[//]: # (      contributors may be used to endorse or promote products derived)
[//]: # (      from this software without specific prior written permission.)
[//]: # ()
[//]: # (THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS)
[//]: # ("AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT)
[//]: # (LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR)
[//]: # (A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT)
[//]: # (OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,)
[//]: # (SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT)
[//]: # (LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,)
[//]: # (DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY)
[//]: # (THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT)
[//]: # ((INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY LOG OF THE USE)
[//]: # (OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.)

## SYNOPSIS

  * `int geopm_pio_num_signal_name(`:
    `void);`

  * `int geopm_pio_signal_name(`:
    `int` _name_idx_, <br>
    `size_t` _result_max_, <br>
    `char *`_result_`);`

  * `int geopm_pio_num_control_name(`:
    `void);`

  * `int geopm_pio_control_name(`:
    `int` _name_index_, <br>
    `size_t` _result_max_, <br>
    `char *`_result_`);`

  * `int geopm_pio_signal_domain_type(`:
    `const char *`_signal_name_`);`

  * `int geopm_pio_control_domain_type(`:
    `const char *`_control_name_`);`

  * `int geopm_pio_read_signal(`:
    `const char *`_signal_name_, <br>
    `int` _domain_type_, <br>
    `int` _domain_idx_, <br>
    `double *`_result_`);`

  * `int geopm_pio_write_control(`:
    `const char *`_control_name_, <br>
    `int` _domain_type_, <br>
    `int` _domain_idx_, <br>
    `double` _setting_`);`

  * `int geopm_pio_push_signal(`:
    `const char *`_signal_name_, <br>
    `int` _domain_type_, <br>
    `int` _domain_idx_`);`

  * `int geopm_pio_push_control(`:
    `const char *`_control_name_, <br>
    `int` _domain_type_, <br>
    `int` _domain_idx_`);`

  * `int geopm_pio_num_signal_pushed(`:
    `void);`

  * `int geopm_pio_num_control_pushed(`:
    `void);`

  * `int geopm_pio_sample(`:
    `int` _signal_idx_, <br>
    `double *`_result_`);`

  * `int geopm_pio_adjust(`:
    `int` _control_idx_, <br>
    `double` _setting_`);`

  * `int geopm_pio_read_batch(`:
    `void);`

  * `int geopm_pio_write_batch(`:
    `void);`

  * `int geopm_pio_save_control(`:
    `void);`

  * `int geopm_pio_restore_control(`:
    `void);`

  * `int geopm_pio_signal_description(`:
    `const char *`_signal_name_, <br>
    `size_t` _description_max_, <br>
    `char *`_description_`);`

  * `int geopm_pio_control_description(`:
    `const char *`_control_name_, <br>
    `size_t` _description_max_, <br>
    `char *`_description_`);`

