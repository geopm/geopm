geopm::PowerGovernorAgent(3) -- agent that enforces a power cap
===============================================================

[//]: # (Copyright (c) 2015, 2016, 2017, 2018, Intel Corporation)
[//]: # ()
[//]: # (Redistribution and use in source and binary forms, with or without)
[//]: # (modification, are permitted provided that the following conditions)
[//]: # (are met:)
[//]: # ()
[//]: # (    * Redistributions of source code must retain the above copyright)
[//]: # (      notice, this list of conditions and the following disclaimer.)
[//]: # ()
[//]: # (    * Redistributions in binary form must reproduce the above copyright)
[//]: # (      notice, this list of conditions and the following disclaimer in)
[//]: # (      the documentation and/or other materials provided with the)
[//]: # (      distribution.)
[//]: # ()
[//]: # (    * Neither the name of Intel Corporation nor the names of its)
[//]: # (      contributors may be used to endorse or promote products derived)
[//]: # (      from this software without specific prior written permission.)
[//]: # ()
[//]: # (THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS)
[//]: # ("AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT)
[//]: # (LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR)
[//]: # (A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT)
[//]: # (OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,)
[//]: # (SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT)
[//]: # (LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,)
[//]: # (DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY)
[//]: # (THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT)
[//]: # ((INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY LOG OF THE USE)
[//]: # (OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.)

## SYNOPSIS

**\#include [<geopm/PowerGovernorAgent.hpp>](https://github.com/geopm/geopm/blob/dev/src/PowerGovernorAgent.hpp)**

`Link with -lgeopm (MPI) or -lgeopmpolicy (non-MPI)`

This class implements all public methods of the **geopm::Agent(3)** interface.

  * `static std::string plugin_name(`:
    `void);`

  * `static std::unique_ptr<Agent> make_plugin(`:
    `void);`

  * `static std::vector<std::string> policy_names(`:
    `void);`

  * `static std::vector<std::string> sample_names(`:
    `void);`

## DESCRIPTION
Class PowerGovernorAgent

The behavior of this agent is described in more detail in the
**geopm_agent_power_governor(7)** man page.  The power limit is
enforced using the **geopm::PowerGovernor(3)** class.

## CLASS METHODS

  * `init`():


  * `validate_policy`():


  * `descend`():


  * `ascend`():


  * `adjust_platform`():


  * `sample_platform`():


  * `wait`():
    Waits until the time since the last wait call reaches 5ms.  This
    causes the Controller main loop to happen with a 5ms cadence.


  * `report_header`():


  * `report_node`():


  * `report_region`():


  * `trace_names`():


  * `trace_values`():


  * `plugin_name`():


  * `make_plugin`():


  * `policy_names`():


  * `sample_names`():

  * `plugin_name`():
    Returns the name of the plugin to use when registering this plugin
    with the factory.

  * `make_plugin`():
    Returns a pointer to a new PowerGovernorAgent object.

  * `policy_names`():
    Returns the names of the policies expected by this agent, which
    consists of "POWER", the power budget.

  * `sample_names`():
    Returns the names of the samples returned by ascend().


## ENUMERATIONS
enum m_policy_e {
M_POLICY_POWER,
M_NUM_POLICY,
};
enum m_plat_signal_e {
M_PLAT_SIGNAL_PKG_POWER,
M_PLAT_SIGNAL_DRAM_POWER,
M_PLAT_NUM_SIGNAL,
};
enum m_trace_sample_e {
M_TRACE_SAMPLE_PWR_BUDGET,
M_TRACE_NUM_SAMPLE,
};
enum m_sample_e { // Tree samples
M_SAMPLE_POWER,
M_SAMPLE_IS_CONVERGED,
M_SAMPLE_POWER_ENFORCED,
M_NUM_SAMPLE,
};

## COPYRIGHT
Copyright (c) 2015, 2016, 2017, 2018, Intel Corporation. All rights reserved.

## SEE ALSO
**geopm(7)**,
**geopm_agent_power_governor(7)**,
**geopm::Agent(3)**,
**geopm::PowerGovernor(3)**
