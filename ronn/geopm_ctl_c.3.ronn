geopm_ctl_c(3) -- geopm power controller structure
==================================================

[//]: # (Copyright (c) 2015, 2016, 2017, Intel Corporation)
[//]: # ()
[//]: # (Redistribution and use in source and binary forms, with or without)
[//]: # (modification, are permitted provided that the following conditions)
[//]: # (are met:)
[//]: # ()
[//]: # (    * Redistributions of source code must retain the above copyright)
[//]: # (      notice, this list of conditions and the following disclaimer.)
[//]: # ()
[//]: # (    * Redistributions in binary form must reproduce the above copyright)
[//]: # (      notice, this list of conditions and the following disclaimer in)
[//]: # (      the documentation and/or other materials provided with the)
[//]: # (      distribution.)
[//]: # ()
[//]: # (    * Neither the name of Intel Corporation nor the names of its)
[//]: # (      contributors may be used to endorse or promote products derived)
[//]: # (      from this software without specific prior written permission.)
[//]: # ()
[//]: # (THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS)
[//]: # ("AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT)
[//]: # (LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR)
[//]: # (A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT)
[//]: # (OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,)
[//]: # (SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT)
[//]: # (LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,)
[//]: # (DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY)
[//]: # (THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT)
[//]: # ((INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY LOG OF THE USE)
[//]: # (OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.)

## SYNOPSIS

**\#include [<geopm_ctl.h>](https://github.com/geopm/geopm/blob/dev/src/geopm_ctl.h)**

`Link with -lgeopm`

  * `int geopm_ctl_create(`:
    `struct geopm_policy_c *`_policy_, <br>
    `struct geopm_ctl_c **`_ctl_);

  * `int geopm_ctl_destroy(`:
    `struct geopm_ctl_c *`_ctl_);

  * `int geopm_ctl_step(`:
    `struct geopm_ctl_c *`_ctl_);

  * `int geopm_ctl_run(`:
    `struct geopm_ctl_c *`_ctl_);

  * `int geopm_ctl_pthread(`:
    `struct geopm_ctl_c *`_ctl_, <br>
    `const pthread_attr_t *`_attr_, <br>
    `pthread_t *`_thread_);

## DESCRIPTION
The geopm_ctl_c structure is used to launch or step the global
extensible open power manager algorithm.  There are several ways to
enable control: explicit stepping of the control algorithm by the
application under control, running the control algorithm as a distinct
processes from the application under control, or running the control
algorithm as a separate pthread owned by the application process under
control.  Each of these methods has different requirements and trade
offs.

  * `geopm_ctl_create`():
    creates a geopm_ctl_c object, _ctl_ which is an opaque structure
    that holds the state used to execute the control algorithm with
    one of the other functions described in this man page.  The user
    must provide a geopm_policy_c pointer, see **geopm_policy_c(3)**
    man page for details.  The control algorithm relies on feedback
    about the application profile. The controller that is created
    is only valid for one rank on each compute node and passing an
    invalid controller to the other functions documented in this man
    page result in a no-op, but all controllers must be destroyed with
    a call to `geopm_ctl_destroy`().

  * `geopm_ctl_destroy`():
    destroys all resources associated with the _ctl_ structure which
    allocated by a previous call to `geopm_ctl_create`().

  * `geopm_ctl_run`():
    steps the control algorithm continuously until the application
    signals shutdown.

  * `geopm_ctl_pthread`():
    creates a POSIX thread running the control algorithm continuously
    until the application signals shutdown.  With this method of launch
    the supporting MPI implementation must be enabled for
    `MPI_THREAD_MULTIPLE` using `MPI_Init_thread`(). Passing an invalid
    controller to this function will result in the `GEOPM_ERROR_CTL_COMM`
    error.

## ERRORS
All functions described on this man page return an error code.  See
**geopm_error(3)** for a full description of the error numbers and how
to convert them to strings.

## COPYRIGHT
Copyright (C) 2015, 2016, 2017, Intel Corporation. All rights reserved.

## SEE ALSO
**geopm(7)**,
**geopmpy(7)**,
**geopm_error(3)**,
**geopm_fortran(3)**,
**geopm_sched(3)**,
**geopm_policy_c(3)**,
**geopm_prof_c(3)**,
**geopm_version(3)**,
**geopmsrun(1)**,
**geopmaprun(1)**,
**geopmplotter(1)**,
**geopmctl(1)**,
**geopmpolicy(1)**
