geopm::CpuinfoIOGroup(3) -- IOGroup for CPU frequency limits
============================================================

[//]: # (Copyright (c) 2015, 2016, 2017, 2018, 2019, Intel Corporation)
[//]: # ()
[//]: # (Redistribution and use in source and binary forms, with or without)
[//]: # (modification, are permitted provided that the following conditions)
[//]: # (are met:)
[//]: # ()
[//]: # (    * Redistributions of source code must retain the above copyright)
[//]: # (      notice, this list of conditions and the following disclaimer.)
[//]: # ()
[//]: # (    * Redistributions in binary form must reproduce the above copyright)
[//]: # (      notice, this list of conditions and the following disclaimer in)
[//]: # (      the documentation and/or other materials provided with the)
[//]: # (      distribution.)
[//]: # ()
[//]: # (    * Neither the name of Intel Corporation nor the names of its)
[//]: # (      contributors may be used to endorse or promote products derived)
[//]: # (      from this software without specific prior written permission.)
[//]: # ()
[//]: # (THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS)
[//]: # ("AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT)
[//]: # (LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR)
[//]: # (A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT)
[//]: # (OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,)
[//]: # (SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT)
[//]: # (LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,)
[//]: # (DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY)
[//]: # (THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT)
[//]: # ((INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY LOG OF THE USE)
[//]: # (OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.)

## SYNOPSIS

**\#include [<geopm/CpuinfoIOGroup.hpp>](https://github.com/geopm/geopm/blob/dev/src/CpuinfoIOGroup.hpp)**

`Link with -lgeopm (MPI) or -lgeopmpolicy (non-MPI)`

This class implements all public methods of the **geopm::Agent(3)** interface.

  * `static std::string plugin_name(`:
    `void);`

  * `static std::unique_ptr<IOGroup> make_plugin(`:
    `void);`

## DESCRIPTION

The CpuinfoIOGroup provides constants for CPU frequency limits as
signals.  These values are obtained through the **proc(5)** filesystem.

## CLASS METHODS

  * `signal_names`():
    Returns the list of signal names provided by this IOGroup.

  * `control_names`():
    Does nothing; this IOGroup does not provide any controls.

  * `is_valid_signal`():
    Returns whether the given _signal_name_ is supported by the
    CpuinfoIOGroup for the current platform.

  * `is_valid_control`():
    Returns false; this IOGroup does not provide any controls.

  * `signal_domain_type`():
    If the _signal_name_ is valid for this IOGroup, returns
    M_DOMAIN_BOARD.  All constants provided by the `CpuinfoIOGroup`
    are assumed to be the same for the whole board.

  * `control_domain_type`():
    Returns M_DOMAIN_INVALID; this IOGroup does not provide any controls.

  * `push_signal`():
    Adds the signal specified by _signal_name_ to the list of signals
    to be read during read_batch().  If _domain_type_ is not
    M_DOMAIN_BOARD, throws an error.  The _domain_idx_ is ignored.

  * `push_control`():
    Should not be called; this IOGroup does not provide any controls.

  * `read_batch`():
    Does nothing; this IOGroup's signals are constant.

  * `write_batch`():
    Does nothing; this IOGroup does not provide any controls.

  * `sample`():
    Returns the value of the signal specified by a _signal_idx_
    returned from push_signal().  The value will have been updated by
    the most recent call to read_batch().

  * `adjust`():
    Should not be called; this IOGroup does not provide any controls.

  * `read_signal`():
    Immediately return the stored value for the given _signal_name_.
    If _domain_type_ is not M_DOMAIN_BOARD, throws an error.  The _domain_idx_
    is ignored.

  * `write_control`():
    Should not be called; this IOGroup does not provide any controls.

  * `save_control`():
    Does nothing; this IOGroup does not provide any controls.

  * `restore_control`():
    Does nothing; this IOGroup does not provide any controls.

  * `agg_function`():
    For all valid signals in this IOGroup, the aggregation function is
    expect_same(), described in **geopm::Agg(3)**.  If any frequency
    range constants are compared between nodes, they should be the
    same or the runtime may behave unpredictably.

  * `signal_description`():
    Returns a string description for _signal_name_, if defined.

  * `control_description`():
    Does nothing; this IOGroup does not provide any controls.

  * `plugin_name`():
    Returns the name of the plugin to use when this plugin is
    registered with the IOGroup factory; see
    **geopm::PluginFactory(3)** for more details.

  * `make_plugin`():
    Returns a pointer to a new CpuinfoIOGroup object; see
    **geopm::PluginFactory(3)** for more details.

## COPYRIGHT
Copyright (c) 2015, 2016, 2017, 2018, 2019, Intel Corporation. All rights reserved.

## SEE ALSO
**geopm(7)**,
**proc(5)**,
**geopm::IOGroup(3)**
