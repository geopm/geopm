geopm::ProfileIOSample(3) -- sample region data from application
================================================================

[//]: # (Copyright (c) 2015, 2016, 2017, 2018, 2019, Intel Corporation)
[//]: # ()
[//]: # (Redistribution and use in source and binary forms, with or without)
[//]: # (modification, are permitted provided that the following conditions)
[//]: # (are met:)
[//]: # ()
[//]: # (    * Redistributions of source code must retain the above copyright)
[//]: # (      notice, this list of conditions and the following disclaimer.)
[//]: # ()
[//]: # (    * Redistributions in binary form must reproduce the above copyright)
[//]: # (      notice, this list of conditions and the following disclaimer in)
[//]: # (      the documentation and/or other materials provided with the)
[//]: # (      distribution.)
[//]: # ()
[//]: # (    * Neither the name of Intel Corporation nor the names of its)
[//]: # (      contributors may be used to endorse or promote products derived)
[//]: # (      from this software without specific prior written permission.)
[//]: # ()
[//]: # (THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS)
[//]: # ("AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT)
[//]: # (LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR)
[//]: # (A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT)
[//]: # (OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,)
[//]: # (SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT)
[//]: # (LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,)
[//]: # (DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY)
[//]: # (THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT)
[//]: # ((INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY LOG OF THE USE)
[//]: # (OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.)

## SYNOPSIS

**\#include [<geopm/ProfileIOSample.hpp>](https://github.com/geopm/geopm/blob/dev/src/ProfileIOSample.hpp)**

`Link with -lgeopm (MPI) or -lgeopmpolicy (non-MPI)`

  * `ProfileIOSample(`:
    `const std::vector<int> &`_cpu_rank_`,`<br>
    `IEpochRuntimeRegulator &`_epoch_regulator_`);`

  * `~ProfileIOSample(`:
    `void);`

  * `void finalize_unmarked_region(`:
    `void);`

  * `void update(`:
    `std::vector<std::pair<uint64_t, struct geopm_prof_message_s> >::const_iterator `_prof_sample_begin_`,`<br>
    `std::vector<std::pair<uint64_t, struct geopm_prof_message_s> >::const_iterator `_prof_sample_end_`);`

  * `void update_thread(`:
    `const std::vector<double> &`_thread_progress_`);`

  * `std::vector<uint64_t> per_cpu_region_id(`:
    `void) const;`

  * `std::vector<double> per_cpu_progress(`:
    `const struct geopm_time_s &`_extrapolation_time_`) const;`

  * `std::vector<double> per_cpu_thread_progress(`:
    `void) const;`

  * `std::vector<double> per_cpu_runtime(`:
    `uint64_t `_region_id_`) const;`

  * `double total_app_runtime(`:
    `void) const;`

  * `std::vector<int> cpu_rank(`:
    `void) const;`

## DESCRIPTION
Class ProfileIOSample
see also: **geopm::ProfileIOGroup(3)**

todo: relate to EpochRuntimeRegulator?

## CLASS METHODS

  * `ProfileIOSample`():


  * `~ProfileIOSample`():


  * `finalize_unmarked_region`():


  * `update`():
    Update internal state with a batch of samples from the
    application.

  * `update_thread`():


  * `per_cpu_region_id`():
    Return the region ID that each CPU is running,
    which is the region of the rank running on that
    CPU.

  * `per_cpu_progress`():
    Return the current progress through the region on each CPU.  The
    current progress is estimated based on the previous two samples
    using the _extrapolation_time_ timestamp

  * `per_cpu_thread_progress`():


  * `per_cpu_runtime`():
    Return the last runtime of the given _region_id_ for the rank
    running on each CPU.

  * `total_app_runtime`():
    Return the total time from the start of the application until now.

  * `cpu_rank`():
    Returns the local-node rank running on each CPU.

## COPYRIGHT
Copyright (c) 2015, 2016, 2017, 2018, 2019, Intel Corporation. All rights reserved.

## SEE ALSO
**geopm(7)**,
**geopm::ProfileIOGroup(3)**
